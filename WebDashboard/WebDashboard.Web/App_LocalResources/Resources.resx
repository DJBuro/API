<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amount" xml:space="preserve">
    <value>(#)</value>
    <comment>“number”, “amount” or “count of”.  Only translate this if # doesn't make sense.  Keep as short as possible.</comment>
  </data>
  <data name="Avg" xml:space="preserve">
    <value>Avg</value>
    <comment>Short for average</comment>
  </data>
  <data name="AvgSpend" xml:space="preserve">
    <value>AvgSpend</value>
    <comment>Average spend</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompOrders" xml:space="preserve">
    <value>Comp Orders</value>
    <comment>Short for "Comparative Orders" (compared with previous years orders)</comment>
  </data>
  <data name="CompResults" xml:space="preserve">
    <value>Comp Results {compWithSalesCount} of {compCount}</value>
    <comment>Short for "Comparative Results" (compared with previous years orders)</comment>
  </data>
  <data name="CompSales" xml:space="preserve">
    <value>Comp Sales</value>
    <comment>Short for "Comparative Sales" (compared with previous years sales)</comment>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="DeliveryTime" xml:space="preserve">
    <value>Delivery Time</value>
  </data>
  <data name="Drive" xml:space="preserve">
    <value>Drive</value>
    <comment>Average drive time in minutes</comment>
  </data>
  <data name="Drivers" xml:space="preserve">
    <value>Drivers</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address:</value>
  </data>
  <data name="EnterEmailAndPassword" xml:space="preserve">
    <value>Please enter your email address and password.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Executive" xml:space="preserve">
    <value>executive</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>This logon isn't recognised, or no longer active</value>
  </data>
  <data name="LessThan30" xml:space="preserve">
    <value>&lt;30</value>
    <comment>Less than 30 minutes</comment>
  </data>
  <data name="LessThan30Min" xml:space="preserve">
    <value>&lt; 30 min</value>
    <comment>Less than 30 minutes</comment>
  </data>
  <data name="LessThan45" xml:space="preserve">
    <value>&lt;45</value>
    <comment>Less then 45 minutes</comment>
  </data>
  <data name="LessThan45Min" xml:space="preserve">
    <value>&lt; 45 min</value>
    <comment>Less then 45 minutes</comment>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log Off</value>
  </data>
  <data name="LogOn" xml:space="preserve">
    <value>Log On</value>
  </data>
  <data name="LogOnTitle" xml:space="preserve">
    <value>log on</value>
  </data>
  <data name="LW" xml:space="preserve">
    <value>LW</value>
    <comment>Last week</comment>
  </data>
  <data name="LWCurrency" xml:space="preserve">
    <value>LW ({currency})</value>
    <comment>DO NOT TRANSLATE "{currency}" THIS WILL BE REPLACED WITH A CURRENCY SYMBOL</comment>
  </data>
  <data name="LWPercent" xml:space="preserve">
    <value>LW (%)</value>
    <comment>Last week</comment>
  </data>
  <data name="LY" xml:space="preserve">
    <value>LY</value>
    <comment>Last year</comment>
  </data>
  <data name="LYCount" xml:space="preserve">
    <value>LY (#)</value>
    <comment>Last year</comment>
  </data>
  <data name="LYCurrency" xml:space="preserve">
    <value>LY ({currency})</value>
    <comment>DO NOT TRANSLATE "{currency}" THIS WILL BE REPLACED WITH A CURRENCY SYMBOL</comment>
  </data>
  <data name="LYPercent" xml:space="preserve">
    <value>LY (%)</value>
    <comment>Last year</comment>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Make</value>
    <comment>Average make time</comment>
  </data>
  <data name="Minimum" xml:space="preserve">
    <value>min</value>
    <comment>Minutes</comment>
  </data>
  <data name="NotHeadOfficeUser" xml:space="preserve">
    <value>You need to be a head-office user to access this area</value>
  </data>
  <data name="OnRoad" xml:space="preserve">
    <value>On Road</value>
    <comment>Drivers on the road at the moment</comment>
  </data>
  <data name="OPR" xml:space="preserve">
    <value>OPR</value>
    <comment>Average number of orders that a driver takes at the same time</comment>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
    <comment>Sales transactions</comment>
  </data>
  <data name="OTD" xml:space="preserve">
    <value>OTD</value>
    <comment>Order to door - time taken to dispatch the order</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Please" xml:space="preserve">
    <value>Please</value>
    <comment>E.g. Please login</comment>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Road" xml:space="preserve">
    <value>Road</value>
    <comment>Drivers on the road at the moment</comment>
  </data>
  <data name="RoadCount" xml:space="preserve">
    <value>Road (#)</value>
    <comment>Drivers on the road at the moment</comment>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Sites" xml:space="preserve">
    <value>Sites</value>
    <comment>As in stores</comment>
  </data>
  <data name="Spend" xml:space="preserve">
    <value>Spend</value>
    <comment>Average ticket value</comment>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="StoreAverage" xml:space="preserve">
    <value>StoreAverage</value>
  </data>
  <data name="Stores" xml:space="preserve">
    <value>Stores</value>
  </data>
  <data name="StoresReporting" xml:space="preserve">
    <value>{storecount} Stores Reporting</value>
    <comment>E.g. 51 Stores Reporting DO NOT TRANSLATE {storecount} THIS WILL BE REPLACED WITH A NUMBER</comment>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>submit</value>
    <comment>On submit button</comment>
  </data>
  <data name="Times" xml:space="preserve">
    <value>Times</value>
    <comment>Average times of various statistics</comment>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="TodayCount" xml:space="preserve">
    <value>Today (#)</value>
  </data>
  <data name="TodayCurrency" xml:space="preserve">
    <value>Today ({currency})</value>
    <comment>DO NOT TRANSLATE "{currency}" THIS WILL BE REPLACED WITH A CURRENCY SYMBOL</comment>
  </data>
  <data name="TTD" xml:space="preserve">
    <value>TTD</value>
    <comment>Time to door - total delivery time</comment>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Work" xml:space="preserve">
    <value>Work</value>
    <comment>Average number or drivers that are working at the store</comment>
  </data>
  <data name="WorkingCount" xml:space="preserve">
    <value>Working (#)</value>
    <comment>Average number or drivers that are working at the store</comment>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Last</value>
    <comment>Part of the text "Last updated"</comment>
  </data>
  <data name="MinimumBrackets" xml:space="preserve">
    <value>(min)</value>
    <comment>Minutes</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment>Part of the text "Store name"</comment>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>(%)</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated</value>
    <comment>Part of the text "Last updated"</comment>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Working</value>
    <comment>Average number or drivers that are working at the store</comment>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Average</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ShowDataFor" xml:space="preserve">
    <value>Show data for:</value>
    <comment>Show data for a date (user selects a date)</comment>
  </data>
  <data name="TodayFull" xml:space="preserve">
    <value>Today</value>
  </data>
</root>