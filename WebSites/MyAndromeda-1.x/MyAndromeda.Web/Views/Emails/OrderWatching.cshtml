@using MyAndromeda.Framework.Contexts;
@using MyAndromeda.Framework.Dates;
@using MyAndromeda.Services.Orders.Models;
@using MyAndromeda.Services.Orders.Helpers;
@using MyAndromeda.Data.DataWarehouse.Models;
@model MyAndromeda.Services.Orders.Emails.OrderWatchingEmail

@section Header
{
    To: @Model.EmailTo
    BCC: @Html.OrderManagementDistribution()
    From: MyAndromeda@androtech.com
    Subject: These Orders are outstanding (@Model.StoreOrderCollection.Count stores | Total orders : @Model.StoreOrderCollection.Sum(e => e.Orders.Length))
}

@helper StoreGrid(OrderMapModel storeOrders, IDateServices dateServices)
{
    var utcNow = DateTime.UtcNow;
    
    <table width="100%" style="width:100%;">
        <thead>
            <tr>
                <th colspan="2" style="padding: 4px 7px; text-align:left">
                    AndroId: @storeOrders.Store.AndromedaSiteId
                </th>
                <th colspan="5" style="padding: 4px 7px; text-align:left">
                    "@storeOrders.Store.ClientSiteName" Orders
                </th>
            </tr>
            <tr>
                <td colspan="7" style="padding: 4px 7px; text-align:left">
                    Store's current date time:
                    @dateServices.ConvertToLocalFromUtc(utcNow).Value.ToString("f")
                </td>
            </tr>
            <tr>
                <th style="padding: 4px 7px; text-align:left">Order placed time</th>
                <th style="padding: 4px 7px; text-align:left">Order Id</th>
                <th style="padding: 4px 7px; text-align:left">Customer Name</th>
                <th style="padding: 4px 7px; text-align:left">Phone Number</th>
                <th style="padding: 4px 7px; text-align:left">Value</th>
                <th style="padding: 4px 7px; text-align:left">Order Wanted Time <br />(store's local time)</th>
                <th style="padding: 4px 7px; text-align:left">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in storeOrders.Orders)
            {
                <tr>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">@dateServices.ConvertToLocalFromUtc(order.OrderPlacedTime).Value.ToString("f")</td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">@order.RamesesOrderNum</td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">@string.Format("{0} {1}", order.Customer.FirstName, order.Customer.LastName)</td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">@order.Customer.Contacts.Where(et => et.ContactTypeId == 1).FirstOrDefault().Value</td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">@order.FinalPrice.ToString("c")</td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top; font-weight:bold;">
                        @dateServices.ConvertToLocalFromUtc(order.OrderWantedTime).Value.ToString("f")<br />
                        @if (order.OrderWantedTime.Value < DateTime.UtcNow)
                        {
                            <b>Overdue!!!</b>
                        }
                    </td>
                    <td valign="top" style="padding: 4px 7px; vertical-align:top">
                        <a href="@Url.Action("Index", "Orders", new { Area = "OrderManagement", ChainId = storeOrders.Store.ChainId, ExternalSiteId = storeOrders.Store.ExternalId },
                        "Http")">Open</a>
                    </td>
                </tr>
                @RenderOrderDetails(order);
            }
        </tbody>
    </table>
}

<div class="wrapper">
    @foreach (var storeGroup in Model.StoreOrderCollection)
    {
        var localizationContext = LocalizationContext.Create(storeGroup.Store.UiCulture, storeGroup.Store.TimeZoneInfoId);
        var dateService = Model.DateServicesFactory.Create(localizationContext);

        @StoreGrid(storeGroup, dateService)
    }
</div>

@helper RenderOrderDetails(OrderHeader order)
{
    var baseStyle = "margin:0; padding:0; font-size: 16px; line-height:17px;";
    var boldParagraphStyle = baseStyle + "font-weight: bold;";
    var paragraphStyle = boldParagraphStyle + "text-align: left;";
    var paragraphStyleCenter = boldParagraphStyle + "text-align: center;";

    <tr style="background-color:#E8E8E8;">
        <td colspan="2" style="width: 30px; padding: 4px 7px;">
            <p style="@paragraphStyleCenter">Qty</p>
        </td>
        <td colspan="5" style="padding: 4px 7px;">
            <p style="@paragraphStyle">Description</p>
        </td>
    </tr>
    foreach (var item in order.OrderLines1)
    {
        @Html.Partial("OrderDetails", item);
    }
}
