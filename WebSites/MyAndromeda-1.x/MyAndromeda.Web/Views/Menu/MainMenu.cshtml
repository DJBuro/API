@using MyAndromeda.Authorization;
@model MyAndromeda.Web.Areas.Authorization.ViewModels.NavigationViewModel
@{
    var workContext= Html.GetWorkContext();
    var translator = Html.GetTranslator();
    var authorizer=  Html.GetAuthorizer();
}

@(Html.Kendo()
    .Menu()
    .Name("Menu")
    .SecurityTrimming(false)
    .Items(items => {
        if (Model.AccessToManyChains()) 
        {
            items.Add().Text(translator.T("My Chains"))
                .Action("index", "Chains", new { Area = string.Empty });
        }

        if (Model.AccessToManySites())
        {
            if (workContext.CurrentChain.Available) { 
            
                items.Add().Text(translator.T("Chain Reports")).Action("index", "Reports", new { Area = "ChainReporting" })
                    .Items(chainMenuItems => {
                    //chainMenuItems.Add().Text("Map").Action("map", "Reporting", new { Area = "ChainReporting" });
                });

            }
            
            items.Add().Text(translator.T("My Sites"))
                .Action("Index", "Sites", new { Area = string.Empty })
                .Items(siteItems => {
                    var sites = workContext.CurrentUser.AccessibleSites.OrderBy(e => e.ClientSiteName);

                    foreach (var site in sites) 
                    {
                        siteItems.Add()
                            .Text(site.ClientSiteName)
                            .Action("Index", "Store", new { Area = "Store", ChainId = site.ChainId, ExternalSiteId = site.ExternalSiteId });
                    }
                });

            //if (workContext.CurrentUser.HasAndroWebOrderingSites)
            
        }
        
        if (Model.WorkContext.CurrentSite.Available && Model.Authorizer.AuthorizedForChainAndStore().IsUserAllowedToSiteWithinChain)
        {
            if (Model.WorkContext.CurrentSite.AndroWebOrderingSites.Count() > 0)
            {
                items.Add().Text(translator.T("My Websites")).Action("List", "AndroWebOrdering", new { Area = "AndroWebOrdering" })
                   .Items(e =>
                   {
                   });
            }
        
            items.Add()
                .Text(translator.T("My Store"))
                .Items(storeItems => {

                    bool userCanSeeVouchers = authorizer.Authorize(MyAndromeda.Web.Areas.Voucher.UserPermissions.ViewVoucherCodes);
                    bool storeHasVouchers = authorizer.Authorize(MyAndromeda.Web.Areas.Voucher.StoreEnrolementPermissions.ViewVoucherCodeArea);

                    if (userCanSeeVouchers && storeHasVouchers) 
                    {
                        storeItems.Add().Text("Vouchers").Action("Index", "SiteVoucherCodes", new { Area = "Voucher" });
                    }

                    if (authorizer.Authorize(MyAndromeda.Web.Areas.Authorization.Permissions.ChangeSiteLevel))
                    {
                        storeItems.Add()
                            .Text(translator.T("Change Enrolment"))
                            .Action("EditEnrolement", "StoreEnrolmentPermission", new { Area = "Authorization", StoreId = Model.WorkContext.CurrentSite.SiteId })
                            .Enabled(workContext.CurrentSite.Available);
                    }
                    
                    storeItems.Add()
                          .Text(translator.T("Delivery Zone"))
                          .Action("DeliveryZonesByRadius", "DeliveryZone", new { Area = "DeliveryZone" })
                          .Enabled(workContext.CurrentSite.Available);

                    storeItems.Add().Text("Order Monitoring").Action("Index", "Orders", new { Area = "OrderManagement" });

                    storeItems.Add().Text(translator.T("Localization")).Action("Index", "Localization", new { Area = "Store" }); 
                });
                //.Action("Index", "Site", new { Area = "Store" })
        }
        
        if (Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Marketing.EnrolmentPermissions.MaketingCategory))
        {
            items.Add().Text(translator.T("Store Marketing"))//.Action("Index", "Email", new { Area = "Marketing" })
                .Items(children => {
                    children.Add()
                        .Text("Email Campaign")
                        .Action("Index", "Email", new { Area = "Marketing" });
                    
                    if(Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Marketing.UserPermissions.ChangeEmailSettings))
                    {
                        children.Add()
                            .Text("Email Settings")
                            .Action("Index", "EmailSettings", new { Area = "Marketing" });
                    }
                });
        }

        if (Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Reporting.Permissions.ViewReports))
        {
            items.Add().Text("Reporting")
                //.Action("Index", "DailyReporting", new { Area = "Reporting" })
                .Items(reportingItems =>
                {
                    reportingItems.Add().Text("All Orders").Action("Index", "DailyReporting", new { Area = "Reporting" });
                    reportingItems.Add().Text("Online Orders").Action("Index", "Store", new { Area = "Reporting" });
                    reportingItems.Add().Text("Performance").Action("ServiceTime", "DailyReporting", new { Area = "Reporting" });
                    reportingItems.Add().Text("Delivery Time").Action("Index", "DeliveryPerformance", new { Area = "Reporting" });

                    reportingItems.Add().Text("Products").Action("Index", "Product", new { Area = "Reporting" });
                    reportingItems.Add().Text("Customers").Action("Index", "Customer", new { Area = "Reporting" });
                    reportingItems.Add().Text("Vouchers").Action("Index", "Voucher", new { Area = "Reporting" });

                    if (Context.User.Identity.Name.Equals("Matt", StringComparison.InvariantCultureIgnoreCase)) 
                    {
                        reportingItems.Add().Text("Map").Action("Index", "Map", new { Area = "Reporting" });
                    }
                    
                });
        }
        if (Model.WorkContext.CurrentSite.Available && Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Voucher.UserPermissions.ViewVoucherCodes))
        {
            
        }


        bool storeCanAccessMenu = Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Menu.StoreEnrolementPermissions.ViewMenuFeature);
        bool userCanAccessMenu = Html.IsAuthorizedForAny(MyAndromeda.Web.Areas.Menu.UserPermissions.ViewMenuFeature, MyAndromeda.Web.Areas.Menu.UserPermissions.EditMenuFeature);
        
        if (storeCanAccessMenu && userCanAccessMenu)
        {       
            bool navigatedWithinStore = Model.WorkContext.CurrentSite.Available;
            if (navigatedWithinStore)
            {
                items.Add().Text("Online Menu")
                    .Content(@<text>
                    <div class="html-menu-item-wrapper" style="padding:1em">
                        <div class="header"><h3>@translator.T("Online menu editor")</h3></div>
                        <a class="k-button" href="@Url.Action("Index", "Modifiers", new { Area = "Menu" })">Matt's secret modifiers</a>
                        <div class="clearfix content-row" style="width:600px">
                            <div class="content1 k-widget">
                                <div class="header">
                                    <a class="k-button" href="@Url.Action("Index", "MenuNavigation", new { Area = "Menu" })">Open</a>
                                    <h4><i class="fa fa-edit"></i> @translator.T("Edit Web items")</h4>
                                </div>
                                <p>@translator.T("This part of the editor can be used to edit the online menu items:")</p>
                                <ul>
                                    <li>@translator.T("A menu items title")</li>
                                    <li>@translator.T("Online description")</li>
                                    <li>@translator.T("Delivery and collection price)")</li>
                                    <li>@translator.T("And dine-in price")</li>
                                </ul>
                                <a class="k-button k-button-link" href="@Url.Action("Index", "MenuNavigation", new { Area = "Menu" })">@translator.T("Edit items")</a>
                            </div>
                            <div class="content1 k-widget">
                                <div class="header">
                                    <a class="k-button" href="@Url.Action("Hierarchy", "MenuNavigation", new { Area = "Menu" })">@translator.T("Open")</a>
                                    <h4><i class="fa fa-sort-amount-asc"></i> @translator.T("Web sequencing")</h4>
                                </div>
                                <p>@translator.T("Use this editor to change the order of how your menu items appear on your online menu.")</p> 
                                <a class="k-button k-button-link" href="@Url.Action("Hierarchy", "MenuNavigation", new { Area = "Menu" })">@translator.T("Edit sequence")</a>
                            </div>
                        </div>
                    </div>

                    </text>);
                    
                    //.Items(menuItems => {
                    //    menuItems.Add().Text("Edit Items").Action("Index", "MenuNavigation", new { Area = "Menu" });
                    //    menuItems.Add().Text("Web Sequencing").Action("Hierarchy", "MenuNavigation", new { Area = "Menu" });    
                    //});             
            }
        }

        if(Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Authorization.Permissions.ChangeRoles))
        {
            items.Add().Text(translator.T("Admin"))
                .Items(authItems => {
                    authItems.Add()
                        .Text(translator.T("Email Report"))
                        .Action("Index", "EmailSummary", new { Area = "admin" });
                    
                    authItems.Add()
                        .Text(translator.T("All Users"))
                        .SpriteCssClasses("fa fa-users")
                        .Route("Users_list", new { controller = "UserManagement" });
                        //.Action("Index", "UserManagement", new { Area = "Users", ChainId = "" });
                    
                    authItems.Add()
                        .Text(translator.T("Chain"))
                        .SpriteCssClasses("fa fa-sitemap")
                        .Enabled(workContext.CurrentChain.Available)
                        .Items(chainItems => {
                            if (workContext.CurrentChain.Available) { 
                                chainItems.Add()
                                    .Text(translator.T("Users"))
                                    .Enabled(workContext.CurrentChain.Available)
                                    .Action("Index", "UserManagement", new { Area = "Users" });
                                chainItems.Add()
                                    .Text(translator.T("Culture"))
                                    .Enabled(workContext.CurrentChain.Available)
                                    .Action("UpdateCulture", "Chains", new { Area = "", ChainId = workContext.CurrentChain.Chain.Id });
                            }
                        });

                    if (Html.IsAuthorizedFor(MyAndromeda.Web.Areas.Authorization.Permissions.ChangeRoles))
                    {
                        authItems.Add()
                            .Text(translator.T("Store Enrolment Levels"))
                            .Action("Levels", "StoreEnrolmentPermission", new { Area = "Authorization" });
                        authItems.Add()
                            .Text(translator.T("User Roles"))
                            .Action("Levels", "UserRoleAuthorization", new { Area = "Authorization" });
                    }
                });
        }
        
        if(authorizer.Authorize(permission: MyAndromeda.Web.Permissions.TestApiSection))
        {

            items.Add().Text("Test").Items(testItems =>
            {
                testItems.Add().Text("Order Monitoring").Action("MonitoringTest", "TestWebApi", new { Area = "" });
                testItems.Add().Text("Success Failure Email").Action("SuccessFailureEmailTest", "TestWebApi", new { Area = "" });
                testItems.Add().Text("Publish Menu").Action("PublishMenu", "Test", new { Area = "Menu" });
                testItems.Add().Text("Announcements").Action("Announce", "Debug", new { Area = "" });
            });
            
        }
    })
)