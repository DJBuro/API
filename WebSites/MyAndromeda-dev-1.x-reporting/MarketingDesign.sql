CREATE TABLE [dbo].[MarketingEventCampaign]
(
	[AndromedaSiteId] INT NOT NULL , 
    [TemplateName] NVARCHAR(50) NOT NULL, 
    [Subject] NVARCHAR(150) NOT NULL, 
    [EnableEmail] BIT NOT NULL, 
    [EnableSms] BIT NOT NULL, 
    [EmailTemplate] NVARCHAR(MAX) NOT NULL, 
    [SmsTemplate] NVARCHAR(MAX) NOT NULL, 
    PRIMARY KEY ([TemplateName], [AndromedaSiteId])
)

CREATE TABLE [dbo].[MarketingContact]
(
	[AndromedaSiteId] INT NOT NULL PRIMARY KEY, 
    [Name] NVARCHAR(100) NOT NULL, 
    [From] NVARCHAR(100) NOT NULL, 
    [ReplyTo] NVARCHAR(100) NOT NULL, 
    [Address] NVARCHAR(100) NULL,
	[City] NVARCHAR(64) NULL,
	[County] NVARCHAR(64) NULL, 
    [PostCode] NVARCHAR(64) NULL, 
    [Country] NVARCHAR(64) NULL
)

/*
Deployment script for Test.MyAndromeda

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Test.MyAndromeda"
:setvar DefaultFilePrefix "Test.MyAndromeda"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Altering [dbo].[MarketingEventCampaign]...';


GO
ALTER TABLE [dbo].[MarketingEventCampaign]
    ADD [Preview]        NVARCHAR (MAX) NULL,
        [PreviewCreated] DATETIME       NULL;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Update complete.';


GO
