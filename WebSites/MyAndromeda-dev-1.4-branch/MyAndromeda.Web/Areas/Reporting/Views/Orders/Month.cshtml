@using MyAndromedaDataAccess.Domain.Reporting;
@model OrdersSummary

<table class="sparkline" data-date="">
    <colgroup>
        <col style="width: 100px" />
        <col style="width: 100px" />
        <col style="width: 100px" />
    </colgroup>
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Sales</td>
            <td>@Model.TotalRangeTurnover.ToString("C")</td>
            <td>
                <span id="TotalTurnoverMonthlySparkLine"></span>
            </td>
        </tr>
        <tr>
            <td>
                Daily Avg
            </td>
            <td>@(string.Format("{0:C}", Model.RangeAverage))</td>
            <td></td>
        </tr>
        <tr>
            <td>Orders</td>
            <td>
                @Model.RangeCount
            </td>
            <td>
                <span id="TotalOrdersMonthSparkLine"></span>
            </td>
        </tr>
        <tr>
            <td>Delivery<br />Collection</td>
            <td>
                @Model.DeliveryOrderQuantity<br />
                @Model.CollectionQuantity
            </td>
            <td>
                <span id="CountCollectionMonthSparkLine"></span>
            </td>
        </tr>
    </tbody>
</table>

@using (Html.BeginScripts())
{
    <script type="text/javascript">
        $(function () {
            var service = $("#dashboardreport").data("ReportingService");
            var filter = {
                from: kendo.parseDate("@DateTime.Now.AddDays(-30).ToString("u")"),
                to: kendo.parseDate("@DateTime.Now.ToString("u")")
            };

            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: function (options) {
                            var from = filter.from;
                            var to = filter.to;
                            var url = "@Url.Action("ReadOrderSummary", "Orders")" + "?from={0}&to={1}&dayOnly={2}";
                            var destination = kendo.format(url, from.toJSON(), to.toJSON(), true);
                            
                            return destination;
                        },
                        dataType: "json",
                        type: "POST"
                    }
                },
                schema: {
                    model: {
                        fields: {
                            "Day": { "type": "date" },
                            "Total": { "type": "number" },
                            "Count": { "type": "number" },
                            "Average": { "type": "number" },
                            "Min": { "type": "number" },
                            "Max": { "type": "number" }
                        }
                    }
                }
            });

            service.Bind("change", function (e) {
                if (e.field !== "from") return;
                var value = service.Get("from");
                var to = new Date(value);
                var from = new Date();

                from.setDate(to.getDate() - 30);

                filter.to = to;
                filter.from = to;
                dataSource.fetch();
            });

            dataSource.fetch(function (result) {
                console.log(result);
            });

            service.AddResult("ThirtyDayLook", dataSource);

            
            $("#TotalTurnoverMonthlySparkLine").kendoSparkline({
                series: [{ "name": "Total", "type": "line", "field": "Total" }],
                dataSource: dataSource,
                tooltip: {
                    template: "<div>#: kendo.toString(dataItem.Day, 'd')# (#: kendo.toString(dataItem.Day, 'ddd')#)</div><div>Total:#: kendo.toString(value, 'c') #</div> "
                }
            });
            $("#TotalOrdersMonthSparkLine").kendoSparkline({
                series: [{ "name": "Value", "type": "column", "field": "Count" }],
                dataSource: dataSource,
                tooltip: {
                    template: "<div>#: kendo.toString(dataItem.Day, 'd')# (#: kendo.toString(dataItem.Day, 'ddd')#)</div><div>Order Count:#: value #</div> "
                }
            });
            $("#CountCollectionMonthSparkLine").kendoSparkline({
                series: [
                    { "name": "Delivery", "type": "line", "field": "DeliveryCount" },
                    { "name": "Collection", "type": "line", "field": "CollectionCount" }
                ],
                dataSource: dataSource,
                tooltip: {
                    template: "#: kendo.toString(dataItem.Day, 'd')# (#: kendo.toString(dataItem.Day, 'ddd')#) | Total:#: value #"
                }
            });
        });


        function testScope(value) {
            console.log(this);

        };
    </script>   
}