@model MyAndromeda.Web.Areas.Store.Models.OpeningTimesViewModel

@{
    List<MyAndromedaDataAccess.Domain.TimeSpanBlock> openingHours = null;

    string day = ViewData["Day"].ToString();
    var isOpenCheckboxId = string.Format("{0}IsOpen", day);
    var openDayFormId = string.Format("{0}Form2", day);
    var openTimeFormId = string.Format("{0}Form", day);
    var isOpenHiddenSelector = string.Format("{0} #ChangeIsOpen", openDayFormId);
}

<div class="sb-right openingHoursBlock content1of7">
    <div class="header">
        <h3>@ViewData["Day"].ToString()</h3>
    </div>  

    @using (Html.BeginForm("UpdateAllDay", "OpeningHours",  new { day = day }, FormMethod.Post, new { id = openDayFormId }))
    {
        @Html.HiddenFor(model => model.ChangeIsOpen);
        <div class="">
            <label>
                @*@Html.CheckBoxFor(model => model.IsOpen[day], new { id = string.Concat(day + "IsOpen") })*@
                <input type="checkbox" id="@(string.Concat(day, "IsOpen"))" value="true" name="@Html.NameFor(e=> e.OpenAllDay)" @if (Model.OpeningHours.IsOpenOn(day))
                                                                                                                      { <text> checked="checked" </text> } />
                Open?
            </label>
        </div>
    }

    @using (Html.BeginForm("UpdateTimes", "OpeningHours", new { day = day }, FormMethod.Post, new { id = openTimeFormId }))
    {   
        <div class="openingHoursBlockInternal icons">
        @if (Model.OpeningHours.TryGetValue(day, out openingHours) && openingHours.Count > 0)
        {    
            <h4 class="addOpeningTime">Opening times</h4>                   
            if (openingHours.Count == 1 && openingHours[0].OpenAllDay)
            {
                <span>Open all day</span> 
            }
            else
            { 
                <ul id="@(day + "OpeningHoursList")" class="openingHoursList blank-list">
                @foreach (MyAndromedaDataAccess.Domain.TimeSpanBlock timeSpanBlock in openingHours)
                {
                    <li>
                        <span class="time-width label-field" >@timeSpanBlock.StartTime - @timeSpanBlock.EndTime</span>
                        <a class="k-button" title="Remove" href="@Url.Action("DeleteOpeningHour", new { openingHoursId = timeSpanBlock.Id })">
                            <span class="k-icon k-i-close"></span>
                        </a>
                        @*<span class="removeLink">
                        @Html.ActionLink("remove", "DeleteOpeningHour", new { id = (string)ViewData["SiteId"], openingHoursId = timeSpanBlock.Id })</span>*@
                    </li>
                }
                </ul>
            }
        }
        </div>
        
        if (Model.OpeningHours.IsOpenOn(day))
        {
            <h4 class="addOpeningTime">Add opening time</h4>
        
            <div>Open from:</div>
            <div class="input-append bootstrap-timepicker-component">
                <input class="startTime input-small" type="text" name="@Html.NameFor(e => e.AddOpeningStartTime)" style="width:100px" required="required"/>
            </div>

            <div>Open until:</div>
            <div class="input-append bootstrap-timepicker-component">
                <input class="endTime input-small" type="text" name="@Html.NameFor(e => e.AddOpeningEndTime)" style="width:100px" required="required"/>
            </div>
            <div>
                Duration:
            </div>
            <div>
                <span class="duration"></span>
            </div>

            <div class="editor-submitButton">
                <input type="submit" value="Add Time" class="k-button" />
            </div>
            
        }
    }
    
    </div>
@using (Html.BeginScripts())
{
    <script type="text/javascript">
        $(document).ready(function () 
        {
            $('#@isOpenCheckboxId').on("click", function (e) {
                var selected = $(this).is(":checked");

                if (!selected) {
                    var continueRemoving = confirm("@string.Format("Closing {0} will remove all of the current open times for this day.", day)");
                    if (!continueRemoving)
                    {
                        e.preventDefault();
                        return;
                    }
                }

                $('#@isOpenHiddenSelector').val(selected);
                $('#@openDayFormId').submit();

                var validator = $("#@openTimeFormId").kendoValidator().data("kendoValidator");
            });
        });
    </script>
    if (Model.OpeningHours.IsOpenOn(day))
    {
    <script type="text/javascript">
        $(function () {
            
            var convertToTimeField = function (element) {
                var $e = $(element);
                $e.kendoTimePicker({
                    "format": "HH:mm",
                    "min": new Date(2013, 7, 19, 0, 0, 0, 0),
                    "max": new Date(2013, 7, 19, 0, 0, 0, 0),
                    "interval": 15
                });
                var picker = $e.data("kendoTimePicker");
                return picker;
            };

            var startElement = "#@openTimeFormId .startTime";
            var endElement = "#@openTimeFormId .endTime";
            var durationElement = "#@openTimeFormId .duration";

            var start = convertToTimeField(startElement);
            var end = convertToTimeField(endElement);

            var startChanged = function () {
                var startTime = start.value();

                if (startTime) {
                    startTime = new Date(startTime);

                    //end.max(startTime);
                    
                    if (end.value()) { 
                        startTime.setMinutes(startTime.getMinutes()+ 60);
                    }
                    //end.min(startTime);
                    end.value(startTime);
                }
            };
            var endChanged = function () {
                var startTime = start.value();
                var endTime = end.value();

                if (!startTime && !endTime)
                {
                    $(durationElement).text("Please select both start and end times.");
                    return;
                }

                var seconds = Math.round((endTime - startTime) / 1000);
                var minutes = Math.floor(seconds / 60);
                var hours = Math.floor(minutes / 60);
                var days = Math.floor(hours / 24);

                hours = hours - (days * 24);
                minutes = minutes - (days * 24 * 60) - (hours * 60);
                seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);

                $(durationElement).text(kendo.format("{0}Hrs {1}Mins", hours, minutes));
            };

            start.bind("change", startChanged);
            start.bind("change", endChanged);
            end.bind("change", endChanged);

            if (start.value() && end.value()) { endChanged(); }
        });
    </script>
    }
}

