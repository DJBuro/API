@model AndroAdmin.Model.StoreModel

@{
    List<AndroAdminDataAccess.Domain.TimeSpanBlock> openingHours = null;
}

<div class="openingHoursBlockEdit">
      
    <fieldset>
        <legend>@ViewData["Day"].ToString()</legend>

        <div class="openingHoursBlockInternal">
            @if (Model.OpeningTimesByDay.TryGetValue((string)ViewData["Day"], out openingHours) && openingHours.Count > 0)
            {
                if (openingHours.Count == 1 && openingHours[0].OpenAllDay)
                {
                    <span class="siteOpenAllDay">Open all day</span> 
                }
                else
                { 
                    <ul id="@(ViewData["Day"].ToString() + "OpeningHoursList")" class="openingHoursList">
                    @foreach (AndroAdminDataAccess.Domain.TimeSpanBlock timeSpanBlock in openingHours)
                    {
                        <li>
                            <span>@timeSpanBlock.StartTime - @timeSpanBlock.EndTime</span>
                            <span class="removeLink">@Html.ActionLink("x", "DeleteOpeningHour", new { id = (int)ViewData["SiteId"], openingHoursId = timeSpanBlock.Id })</span>
                        </li>
                    }
                    </ul>
                }
            }
            else
            {
                <p class="siteClosed">Closed</p>
            }
        </div>
        
        <div style="border-top: solid 1px gray; padding-top:10px;">
            @using (Html.BeginForm("OpenCloseStore", "Store", new { id = (int)ViewData["SiteId"], openCloseStore = true, day = (string)ViewData["Day"] }, FormMethod.Post, new { id = (string)ViewData["Day"] + "OpenCloseForm" }))
            {
                @Html.HiddenFor(model => model.ChangeIsOpen)
                @Html.HiddenFor(model => model.Store.Id)

                <div class="sliderWrapper">
                    @Html.CheckBoxFor(model => model.IsOpen[ViewData["Day"].ToString()], new { id = ViewData["Day"].ToString() + "IsOpen" })
                </div>
            }
        </div>
            
        <h4 class="addOpeningTime">Add opening time</h4>
        
        @using (Html.BeginForm("StoreOpeningTimes", "Store", new { id = (int)ViewData["SiteId"], openCloseStore = false, day = (string)ViewData["Day"] }, FormMethod.Post, new { id = (string)ViewData["Day"] + "OpenCloseForm" }))
        {   
            @Html.HiddenFor(model => model.Store.Id)
            <div>Open from:</div>
            <div class="input-append bootstrap-timepicker-component">
                @Html.TextBoxFor(model => model.AddOpeningStartTime, new { @class = "input-mini timepicker-default" })  
                <span class="add-on">
                    <i class="icon-time"></i>
                </span>
            </div>

            <div>Open until:</div>
            <div class="input-append bootstrap-timepicker-component">
                @Html.TextBoxFor(model => model.AddOpeningEndTime, new { @class = "input-mini timepicker-default" })  
                <span class="add-on">
                    <i class="icon-time"></i>
                </span>
            </div>

            <p class="editor-submitButton">
                <input type="submit" value="add" class="button cancel" />
            </p>
        }
    
    </fieldset>
</div>

<script type="text/javascript">
    $(document).ready(function () 
    {
        // Hook up the time picker
        $('.timepicker-default').timepicker();

        // Hook up the slider
        $('#@(ViewData["Day"].ToString())IsOpen').iphoneStyle(
        {
            checkedLabel: 'Open',
            uncheckedLabel: 'Closed',
            onChange: function () 
            {
                var oldValue = $('#@ViewData["Day"].ToString()IsOpen').val();
                var newValue = oldValue == 'true' ? 'false' : 'true';
                $('#@(ViewData["Day"].ToString())OpenCloseForm #ChangeIsOpen').val(newValue);
                $('#@(ViewData["Day"].ToString())OpenCloseForm').submit();
            }
        });

        // Set the initial slider value - doesn't seem to pickup the initial input value
        var isOpen = @(Model.IsOpen[ViewData["Day"].ToString()].ToString().ToLower());
        $('#@(ViewData["Day"].ToString())IsOpen').val(isOpen);

    });
</script>