@model MVCAndromeda.ViewModels.StorePlotViewModel

@using MVCAndromeda.Models;
@{
    ViewBag.Title = "Individual store data for " + Model.Data.StoreName + " from " + Model.Data.Country;
}
@{
    string ownerName = this.Model.User.Firstname;
    string country = ViewBag.country;
}
@(Html.Kendo().MobileView()
        .Name("navbar-home")
        .Title(ownerName)
        .Zoom(true)
        .Header(obj =>
            Html.Kendo().MobileNavBar()
                   .Content(navbar =>
                    @<text>
@(Html.Kendo().MobileBackButton()
                                .Align(MobileButtonAlign.Left)
                                .HtmlAttributes(new Dictionary<string,object>(){{"data-show-spinner",true},{ "@class","nav-button" }})
                                .Url(Url.Action("Individual", "StoreData",
    new { storeName = Model.Data.StoreName, country = Model.Data.Country }))
                                .Text("Back"))
@navbar.ViewTitle("")

@(Html.Kendo().MobileButton()
                                .Align(MobileButtonAlign.Right)
                                .HtmlAttributes(new Dictionary<string,object>(){{"data-show-spinner",true}})
                                .Text("All Stores")
                                .Url(Url.Action("Index", "StoreData",
                        new
                        {
                            chosenCountry = ViewBag.country,
                            Time = ViewBag.Time,
                            term = (new List<string>(MVCAndromeda.Models.DateUtilities.weekDayAveragingPeriod)).Contains(ViewBag.term) ?
                            MVCAndromeda.Models.DateUtilities.averagingPeriod[0] : ViewBag.term,
                            unitsAgo = ViewBag.unitsAgo,
                            orderHow = ViewBag.orderHow,
                            orderWhat = ViewBag.orderWhat
                        })))

@(Html.Kendo().MobileButton()
                                .Align(MobileButtonAlign.Right)
                                .HtmlAttributes(new Dictionary<string,object>(){{"data-show-spinner",true}})
                                .Text("Log Off")
                                .Url(Url.Action("LogOff", "Account", new { i = 0 })))


</text>)
            )

.Content(
     @<text>
@{int k = -1;}
@(Html.Kendo().MobileButtonGroup()
                        .Name("select-period2")
                        .Items(items =>
                        {
                            for (int i = 0; i < DateUtilities.weekDayAveragingPeriod.Length; i++)
                            {
                                var period = DateUtilities.weekDayAveragingPeriod[i];
                                if (ViewBag.term == period)
                                    k = i;

                                var route = Url.Action("StorePlot",
                                   new
                                   {
                                       storeName = Model.Data.StoreName,
                                       country = Model.Data.Country,
                                       term = period,
                                       unitsAgo = 0,
                                       storeMeasureIndex = ViewBag.storeMeasureIndex
                                   });
                                items.Add()
                                    .Text(DateUtilities.weekDayShortAveragingPeriod[i])
                                    .HtmlAttributes(new Dictionary<string, object>(){
                                        { "onclick",string.Format("location.href='{0}'", route)},
                                        {"data-show-spinner",true} });
                            }


                        })
                        .Index(k)
                        .Events(events => events.Select("onSelect"))
                        )

<h3>@CubeAdapter.storeMeasureNames[ViewBag.storeMeasureIndex] for "@Model.Data.StoreName" from @Model.Data.Country</h3>
<h4>@ViewBag.TimeDesc</h4>

<!--img src='@Url.Action("DrawChart", new
                 {
                     storeName = Model.Data.StoreName,
                     country = Model.Data.Country,
                     term = ViewBag.term,
                     unitsAgo = ViewBag.unitsAgo,
                     _storeMeasureIndex = ViewBag.storeMeasureIndex
                 })' style="width:100%" alt="" /-->

<div class="chart-wrapper">
    @(Html.Kendo().Chart().HtmlAttributes(new { style = "width:100%; height:300px" })
        .Name("chart").Theme("silver")
        .Title(Model.Data.Title)
        .Legend(legend => legend
            .Visible(true).Position(ChartLegendPosition.Top)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .Series(series =>
        {
            for (int i = 0; i < Model.Data.YValues.Length; i++)
                series.Column(Model.Data.YValues[i]).Name(Model.Data.Cases[i]);

        })
        .CategoryAxis(axis => axis
            .Categories(Model.Data.XValues)
            .MajorGridLines(lines => lines.Visible(true))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Line(line => line.Visible(false))
            .MajorGridLines(lines => lines.Visible(true))

        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= series.name #: #= value #")
        )
    )
</div>



</text>

)
      )


<style>
    .wrapper {
 width: 100%;
 display: inline-block;
 position: relative;
}
.wrapper:after {
    padding-top: 56.25%; /*16:9 ratio*/
    display: block;
    content: '';
}</style>

