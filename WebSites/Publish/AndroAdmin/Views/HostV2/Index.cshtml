@model IEnumerable<AndroAdminDataAccess.EntityFramework.HostType>
@{
    var foreignKeyModels = Model.Select(e => new { e.Id, e.Name });
    var defaultModel = this.Model.FirstOrDefault();
    
}
<h2>Host V2 list</h2>

<a href="@Url.Action("Index", "HostV2Type")" class="k-primary k-button" >Edit host types</a>
<a href="@Url.Action("UpdateAll")" class="k-primary k-button">ReSync complete host list</a>

@if (defaultModel != null)
{
    /* ie we can actually choose a host type */
    @(Html.Kendo().Grid<AndroAdminDataAccess.EntityFramework.HostV2>()
    .Name("HostV2Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Enabled).Width(90);
        columns.Bound(p => p.Url).Width(240);
        columns.Bound(p => p.OptInOnly).Title("Opt in only").Width(90);
        columns.Bound(p => p.Public).Width(90);
        columns.Bound(p => p.Version).Width(90);
        columns.Bound(p => p.Order).Width(90);
        //columns.Bound(p => p.LastUpdateUtc).Width(100);
        columns.ForeignKey(p => p.HostTypeId, foreignKeyModels, "Id", "Name")
            .Title("Host Type")
            .Groupable(true)
            .Width(150);

        columns.Command(command => command.Edit()).Width(110);
        columns.Command(command => command.Destroy()).Width(110);
    })
    .ClientDetailTemplateId("HostTemplate")
    .ToolBar(toolBar =>
    {
        toolBar.Create();
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(true))
    .Events(e=> e.SaveChanges("onSaveChanges").Save("onSaveChanges"))
    .Filterable()
    .Groupable()
    .Pageable()
    .Scrollable()
    .Sortable()
    .ColumnMenu(e=> e.Filterable(true).Sortable(true))
    .Resizable(r=> r.Columns(true))
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        
        //.Batch(true)
        .PageSize(20)
        .ServerOperation(false)
        //.Group(e=> e.Add(group => group.HostTypeId))
        .Events(events => events.Error("host_error_handler").Sync("onSync"))
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(e => e.HostTypeId)
                .DefaultValue(defaultModel == null ? new Guid() : defaultModel.Id);
            //model.Field(e => e.LastUpdateUtc).
            //    .Editable(false);
        })
        
        .Read(read => read.Action("Read", "HostV2"))
        .Update(update => update.Action("Update", "HostV2"))
        .Create(create => create.Action("Create", "HostV2"))
        .Destroy(destroy => destroy.Action("Destroy", "HostV2"))
    )
)
    
}

<script id="HostTemplate" type="text/template">
    @(Html.Kendo().TabStrip().Name("HostTemplate_#=Id#").SelectedIndex(0)
        .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
        .HtmlAttributes(new { Style = "Width:900px" })
        .Items(items =>
        {
            items.Add().Text("Stores").Content(@<text>
                @(Html.Kendo()
                    .Grid<AndroAdmin.ViewModels.HostV2.HostListViewModel>()
                    .Name("Grid_Stores_#=Id#")
                    .Columns(c =>
                    {
                        var editUrl = @Url.Action("Index", "HostV2ForStores", new { Id = "\\#= Id \\#" });
                        c.Bound(e => e.Name);
                        c.Bound(e => e.Id)
                            .Filterable(false).Sortable(false)
                            .Title("Actions").ClientTemplate(string.Format("<a class='k-button' href='{0}'>Edit store host list</a>", editUrl))
                            .Width(170);
                        //c.Command(e => e.Custom("Edit Hosts")).te;
                    })
                    .Pageable(pageable => pageable.ButtonCount(5))
                    .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("ListStoreByHostV2Id", "HostV2ForStores", new { Id = "#=Id#" })))
                    .Sortable().Filterable()
                    .ToClientTemplate()
                )
                </text>);
            items.Add().Text("Applications").Content(@<text>
                @(Html.Kendo()
                    .Grid<AndroAdmin.ViewModels.HostV2.HostApplicationListViewModel>()
                    .Name("Application_#=Id#")
                    .Columns(c =>
                    {
                        var editUrl = @Url.Action("Index", "HostV2ForApplication", new { Id = "\\#= Id \\#" });
                        c.Bound(e => e.Name);
                        c.Bound(e => e.Id)
                            .Filterable(false).Sortable(false)
                            .Title("Actions")
                            .ClientTemplate(string.Format("<a class='k-button' href='{0}'>Edit application host list</a>", editUrl))
                            .Width(180);
                        c.Bound(e => e.ExternalApplicationId)
                            .Filterable(false)
                            .Title("Debug")
                            .ClientTemplate("<a class='k-button' href='#=Url#/host?applicationid=\\#= ExternalApplicationId \\#'>ACS Hosts</a>")
                            .Width(100);
                    })
                    .Pageable(pageable => pageable.ButtonCount(5))
                    .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("ListApplicationByHostV2Id", "HostV2ForApplication", new { Id = "#=Id#" })))
                    .Sortable().Filterable()
                    .ToClientTemplate()
                )
                </text>);

        }).ToClientTemplate()

    )
</script>

<script type="text/javascript">
    function host_error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }


    function onSync(e) {
        console.log("Sync");

        kendo.ui.progress($("#HostV2Grid"), false);
    }

    function onSaveChanges(e) {
        console.log("save");

        kendo.ui.progress($("#HostV2Grid"), true);
    }

</script>
