@model  AndroAdmin.Model.OrderMetricsViewModel

@{
    ViewBag.Title = "Metrics";
    Layout = "~/Views/Shared/_WebOrderingLayout.cshtml";
}

<div id="addStorePage">
    <div>
        <!-- Breadcrumb -->
        <h2 style="float: left;">@Html.ActionLink("ACS Metrics / Order History", "Index", "Store", new { }) </h2>
    </div>

    <div style="clear: both;"></div>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#report').click(function () {
                $('#OrderHistory').data('kendoGrid').dataSource.fetch();
            });
            //$("#FromDate").data("kendoDatePicker").readonly();
            //$("#ToDate").data("kendoDatePicker").readonly();
        });
        function showDetails(pId) {
            var orderWindow;
            var url = '@Url.Action("Details", "Metrics")?id=' + pId;
            orderWindow = $("#details")
                      .kendoWindow({
                          title: "ACS Order",
                          modal: true,
                          visible: false,
                          resizable: false,
                          width: 800,
                          height: 800,
                          content: url
                      }).data("kendoWindow");

            orderWindow.center().open();
        }

        function populateChart(e) {
            console.log("im a running");
            var grid = $('#OrderHistory').data('kendoGrid');
            var dataSource = grid.dataSource;
            var chart = $('#chart').data('kendoChart');
            var chartDataSource = chart.dataSource;
            var gridData = dataSource.data();
            chartDataSource.data(gridData);
        }

        function showGrid() {
            $("#divGrid").show();
            $("#divGraph").hide();

        }
        function showGraph() {
            $("#divGrid").hide();
            $("#divGraph").css("display", "block");

        }
    </script>

    @using (Html.BeginForm())
    {
        <div>
            <div id="details"></div>
            <!-- Chain -->
            <div>
                <label for="categories">Chain:</label>
                @(Html.Kendo().DropDownListFor(m => m.ChainId)
              .HtmlAttributes(new { style = "width:200px" })
              .OptionLabel("All")
              .DataTextField("Name")
              .DataValueField("Id")
              .Value(Model.ChainId.ToString())
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetChains", "Metrics");
                  });
              })
                )
                <label for="categories" style="padding-left: 10px">ACS Application:</label>
                @(Html.Kendo().DropDownListFor(m => m.ACSApplicationId)
              .HtmlAttributes(new { style = "width:200px" })
              .OptionLabel("All")
              .DataTextField("Name")
              .DataValueField("Id")
              .Value(Model.ACSApplicationId.ToString())
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetACSApplications", "Metrics").Data("filterChains");
                  }).ServerFiltering(true);
              })
              .AutoBind(true)
              .CascadeFrom("ChainId")
                )
                <script>
                    function filterChains() {
                        return {
                            chain: $("#ChainId").val()
                        };
                    }
                </script>

                <label for="store" style="padding-left: 10px">Store:</label>
                @(Html.Kendo().DropDownListFor(m => m.SiteId)
              .HtmlAttributes(new { style = "width:200px" })
              .OptionLabel("All")
              .DataTextField("Name")
              .DataValueField("ExternalSiteId")
              .Value(Model.SiteId.ToString())
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetStores", "Metrics").Data("filterApplications");
                  }).ServerFiltering(true);
              })
              .AutoBind(true)
              .CascadeFrom("ACSApplicationId")
                )
                <script>
                    function filterApplications() {
                        return {
                            chain: $("#ChainId").val(),
                            application: $("#ACSApplicationId").val()
                        };
                    }
                </script>


            </div>

            <div style="padding-top: 10px;">
                Start Date:
                @(Html.Kendo().DatePickerFor(m => m.FromDate).HtmlAttributes(new { @required = true, onkeydown = "javascript:return false;" }).Value(Model.FromDate).Format("MM/dd/yyyy").Name("FromDate").Events(e => e.Change("fromChange")))


                End Date:
                @(Html.Kendo().DatePickerFor(m => m.ToDate).HtmlAttributes(new { @required = true, onkeydown = "javascript:return false;" }).Value(Model.ToDate).Format("MM/dd/yyyy").Name("ToDate").Events(e => e.Change("toChange")))
            </div>
            <div style="padding-top: 20px;">
                <button class="k-button" id="report" type="submit">Apply Filters</button>
            </div>
            <div style="height: 10px">
            </div>
            @*<div>
                    <a onclick="showGrid()" href="javascript:void(0);">List</a>
                    <a onclick="showGraph()" href="javascript: void(0);">Graph</a>
                </div>*@
            <div id="orderList" style="height: 550px;">
                @(Html.Kendo().TabStrip()
          .Name("tabstrip")
          .Items(tabstrip =>
          {
              tabstrip.Add().Text("List")
                  .Selected(true)
                  .Content(@<text>
                <div id="divGrid">
                    <div id="filters" class="k-toolbar k-widget k-toolbar-resizable" style="margin-bottom: 6px; margin-top: 2px;">
                        <div style="height: 27px;">
                            <b>Filter by Order status:</b>
                            @Html.DropDownList("OrderStatus", "All")
                            <b>Filter by ACS response:</b>
                            @Html.DropDownList("ErrorCodes", "All")
                        </div>
                        <div>
                            <b>Search: </b>
                            <input class="k-textbox" style="width: 200px" type="text" data-bind="value: searchText" data-value-update="keyup" />
                        </div>
                    </div>

                    @(Html.Kendo().Grid<DataWarehouseDataAccess.Domain.OrderHeaderDAO>().Name("OrderHistory")
                            .Filterable(f => f.Enabled(false))
                            .Pageable(p => p.PageSizes(new[] { 10, 20, 50 }))
                            .Sortable()
                            .Scrollable(c => c.Height(350))
                            .ColumnMenu()
                            .Sortable()
                            .Filterable()
                            .Columns(cols =>
                            {
                                cols.Bound(e => e.ID).Title("Partner Order #").Locked(true).Width(300)
                                    .ClientTemplate("<a href='javascript: void(0);'onclick=\"showDetails('#= ACSOrderId #');\">" + "#= ACSOrderId #" + "</a>");
                                cols.Bound(e => e.RamesesOrderNum).Title("Rameses Order #").Width(150);
                                cols.Bound(e => e.OrderPlacedTime).Title("Order Placed Date/Time").Format("{0: dd-MM-yyyy hh:mm:tt}").Width(170);
                                cols.Bound(e => e.OrderWantedTime).Title("Order Wanted Date/Time").Format("{0: dd-MM-yyyy hh:mm:tt}").Width(170);
                                cols.Bound(e => e.ACSErrorCode.ShortDescription).Title("ACS Response").Width(170);
                                cols.Bound(e => e.OrderStatus.Description).Title("Order Status").Width(200);
                                cols.Bound(e => e.FinalPrice).Title("Amount").Format("{0:c}").Width(100);
                                cols.Bound(e => e.SiteName).Title("Store Name").Width(150);
                                cols.Bound(e => e.DestinationDevice).Title("POS Type").Width(150);

                                cols.Bound(e => e.ID).Title("Order #").Width(300);
                                cols.Bound(e => e.ACSServer).Title("ACS Server").Width(100);
                                cols.Bound(e => e.ApplicationName).Title("ACS Application").Width(200);
                                cols.Bound(e => e.Customer.FirstName).Title("Customer Name").Width(150);
                            })
                            .Events(x => x.DataBound("populateChart"))
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .ServerOperation(false)
                            .PageSize(30)
                            .Read(read => read.Action("GridData", "Metrics").Data("xyz"))))
                </div>
                </text>);
              tabstrip.Add().Text("Graph")
                  .Selected(false)
                    .Content(@<text>
                <div id="divGraph">
                    <div class="chart-wrapper" style="height: 450px;">
                        @(Html.Kendo().Chart<DataWarehouseDataAccess.Domain.OrderHeaderDAO>()
                        .Name("chart")
                        .Title("Order History")
                        .Legend(legend => legend
                            .Position(ChartLegendPosition.Top)
                        )
                        .ChartArea(area => area.Width(950))
                        .SeriesDefaults(seriesDefaults =>
                        seriesDefaults.Column().Stack(true)
                        )
                        .Series(series =>
                        {
                            //series.Bar(@Model.OrderMetrics.SuccessSeries).Name("Completed Orders").Color("#819FF7");
                            //series.Bar(@Model.OrderMetrics.FailedSeries).Name("Failed Orders").Color("#DF0101");
                            series.Column(x => x.IsSuccess).Name("Completed Orders").Color("#819FF7")
                                .Aggregate(ChartSeriesAggregate.Sum);
                            series.Column(x => x.IsFailed).Name("Failed Orders").Color("#DF0101")
                                .Aggregate(ChartSeriesAggregate.Sum);
                            //series.Column(x => x.IsCancelled).Name("Cancelled Orders").Color("#6E6E6E")
                            //    .Aggregate(ChartSeriesAggregate.Sum);
                        })
                        .CategoryAxis(axis => axis
                            //.Categories(@Model.OrderMetrics.DateSeries)
                        .Categories(x => x.OrderPlacedTime).Date().BaseUnit(ChartAxisBaseUnit.Days)
                            .MajorGridLines(lines => lines.Visible(false))
                            .Labels(l => l.Rotation(-90))
                        )
                        .ValueAxis(axis => axis
                        .Numeric()
                        .Labels(labels => labels.Format("{0}"))
                            //.Max(180)
                            .Line(line => line.Visible(true))
                            .MajorGridLines(lines => lines.Visible(true))
                        )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                                     .Template("#=  kendo.format('{0:d}',category)  # (#=  kendo.format('{0:ddd}',category)  #)<br/> #= value # #= series.name #")
                        )
                        )
                    </div>
                </div>
                </text>);
          })
                )
            </div>
        </div>
    }

    <script src="~/Scripts/app/Metrics/Metrics.js"></script>
    <script type="text/javascript">

        $(function () {
            var service = new AndroAdmin.Services.Metrics.MetricsListService();
            service.Init();
        });

        $("#ErrorCodes").change(function () {
            var d = new AndroAdmin.Services.Metrics.MetricsListService();
            d.vm.selectedErrorCodeOptions = $(this).val();
            d.vm.selectedOrderStatusOptions = $("#OrderStatus").val();
            d.VmChanged();
        });

        $("#OrderStatus").change(function () {
            var d = new AndroAdmin.Services.Metrics.MetricsListService();
            d.vm.selectedOrderStatusOptions = $(this).val();
            d.vm.selectedErrorCodeOptions = $("#ErrorCodes").val();
            d.VmChanged();
        });


    </script>

    <script type="text/javascript">
        function xyz() {
            var tmpStart = $("#FromDate").data("kendoDatePicker").value();
            var tmpEnd = $("#ToDate").data("kendoDatePicker").value();
            var dtStart = kendo.parseDate(tmpStart);
            var dtEnd = kendo.parseDate(tmpEnd);
            return {
                chainId: $("#ChainId").data("kendoDropDownList").value(),
                appId: $("#ACSApplicationId").data("kendoDropDownList").value(),
                siteId: $("#SiteId").data("kendoDropDownList").value(),
                fromDate: dtStart.toJSON(),
                toDate: dtEnd.toJSON(),
            };
        }

        //For from and to date validation
        $(document).ready(function () {
            var endDate = $('#ToDate').val();
            var startDate = $('#FromDate').val();
            endDate = new Date(endDate);
            startDate = new Date(startDate);
            var startPicker = $("#FromDate").data("kendoDatePicker");
            startPicker.max(endDate);
            var endPicker = $("#ToDate").data("kendoDatePicker");
            endPicker.min(startDate);
        });

        function fromChange() {
            var endPicker = $("#ToDate").data("kendoDatePicker"),
                startDate = this.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                endPicker.min(startDate);
            }
        }

        function toChange() {
            var startPicker = $("#FromDate").data("kendoDatePicker"),
                endDate = this.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                startPicker.max(endDate);
            }
        }

    </script>
