<%@ CodeTemplate Language="C#" TargetLanguage="C#" Description="Generates an aspx.cs  class for use with NHibernate" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the mapping file is based on" %>
<%@ Property Name="Namespace" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="FormNamespace" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="DAOName" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="Assembly" Type="System.String" Default="MyApp.MyAssembly" Category="Object" Description="The assembly that the class will be used in" %>
<%@ Property Name="RemoveTablePrefix" Type="System.String" Default="tbl" Category="Object" Description="The prefix to remove from table names" %>
<%@ Property Name="ForceId" Type="System.Boolean" Default="true" Category="Object" Description="Force Id for identity column" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<script runat="template">
	/*
	Title    : NHibernate.class.cst
	Author   : Scott Beeler  (Modified from version provided by Simon Green (simon@intesoft.net) http://www.intesoft.net/nhibernate)

	Summary  : Codesmith template to generate the C# class file for use with NHibernate
	Notes    : Will recognise & Handle (most) many-to-many linking tables, both sides of self-joins, one-to-one joins and polymorphism
	*/
</script>
<%= BuildAtPageDeclaration(FormNamespace,ClassName(SourceTable)+"Form")%>

<Cacd:CacdValidationSummary ID="ValidationSummary" runat="server" />

	<h4><asp:Label ID="caption" runat="server"></asp:Label></h4>
		<% if (SourceTable.PrimaryKey.MemberColumns.Count == 1) {%>
				<%= BuildPrimaryKeyHiddenField(SourceTable)%>
			<% } %>		
        <table>
			<% foreach (TableKeySchema foreignKey in SourceTable.ForeignKeys) { %>
				<%= BuildForeignKeyDropDown(foreignKey)%>
			<% } %>
			<% foreach(ColumnSchema column in SourceTable.NonKeyColumns) { %>
				<%= BuildMemberInputField(column)%>
			<% } %>
			<% foreach (TableKeySchema foreignKey in SourceTable.ForeignKeys) { %>
				<% if ((foreignKey.ForeignKeyTable == SourceTable) && (foreignKey.PrimaryKeyTable == SourceTable)) { %>
					<%= BuildSelfRelationshipDivSelectRegion(foreignKey)%>
				<% } %>
			<% } %>
			<% foreach(TableKeySchema primaryKey in SourceTable.PrimaryKeys) { %>
				<% if (IsManyToManyTable(primaryKey.ForeignKeyTable)) { %>
					<%= BuildPrimaryKeyDivSelectRegion(primaryKey)%>
				<% } else if (IsOneToOneTable(primaryKey)) { %>
					<%= BuildPrimaryKeyDropdown(primaryKey)%>
				<% } else if (IsSubClassTable(primaryKey)) { %>
				<% } else { %>
					<%= BuildGenericPKDIVSelectRegion(primaryKey)%>
				<% } %>
			<% } %>
		</table>	


<!-- #include file="NHibernate.inc" -->

