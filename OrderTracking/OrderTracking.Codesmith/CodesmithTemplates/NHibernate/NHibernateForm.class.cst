<%@ CodeTemplate Language="C#" TargetLanguage="C#" Description="Generates an aspx.cs  class for use with NHibernate" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the mapping file is based on" %>
<%@ Property Name="Namespace" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="FormNamespace" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="DAOName" Type="System.String" Default="MyNamespace.Data" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="Assembly" Type="System.String" Default="MyApp.MyAssembly" Category="Object" Description="The assembly that the class will be used in" %>
<%@ Property Name="RemoveTablePrefix" Type="System.String" Default="tbl" Category="Object" Description="The prefix to remove from table names" %>
<%@ Property Name="ForceId" Type="System.Boolean" Default="true" Category="Object" Description="Force Id for identity column" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<script runat="template">
	/*
	Title    : NHibernate.class.cst
	Author   : Scott Beeler  (Modified from version provided by Simon Green (simon@intesoft.net) http://www.intesoft.net/nhibernate)

	Summary  : Codesmith template to generate the C# class file for use with NHibernate
	Notes    : Will recognise & Handle (most) many-to-many linking tables, both sides of self-joins, one-to-one joins and polymorphism
	*/
</script>

using System;
using Cacd.Web.Common.Core;


namespace <%= FormNamespace %>
{
	#region <%= ClassName(SourceTable) %>

	/// <summary>
	/// <%= ClassName(SourceTable) %> form for NHibernate mapped table '<%= ClassTable(SourceTable) %>'.
	/// </summary>
	public partial class <%= ClassName(SourceTable) %>Form : BaseUserControl
		{
		#region Fields
		
		private <%=Namespace%>.<%= ClassName(SourceTable) %> _<%= ClassName(SourceTable) %>;

			
		#endregion
		
		#region Properties

		public <%=Namespace%>.<%= ClassName(SourceTable) %> <%= ClassName(SourceTable) %>
		{
			set { _<%= ClassName(SourceTable) %> = value; }
			get { return _<%= ClassName(SourceTable) %>; }
		}
		
		#endregion
		
		#region Model Management and data binding methods
		
		protected override void InitializeModel()
    	{
        	_<%= ClassName(SourceTable) %> = new <%=Namespace%>.<%= ClassName(SourceTable) %> ();
    	}
		
		protected override void LoadModel(object savedModel)
    	{
       		 _<%= ClassName(SourceTable) %> = (<%=Namespace%>.<%= ClassName(SourceTable) %>)savedModel;
    	}
		
		protected override object SaveModel()
		{
			return _<%= ClassName(SourceTable) %>;
		}
		
		
		protected override void InitializeDataBindings()
    	{
			//initialise data bindings for the standard columns (Normal Columns)
			<% foreach(ColumnSchema column in SourceTable.NonKeyColumns) { %>
				BindingManager.AddBinding("<%= FormTextBoxElementValueString(PropertyName(column)) %>","<%= ClassName(SourceTable)%>.<%= PropertyName(column) %>");
			<% } %>	
    	}
		
		#endregion

		#region Page Lifecycle Methods
	
		protected override void OnInitializeControls(EventArgs e)
		{
			if (!IsPostBack)
			{
				Bind<%= ClassName(SourceTable) %>DropdownsAndDivSelectRegions();
			}
		}
	
		protected override void OnUserCultureChanged(EventArgs e)
		{
			Bind<%= ClassName(SourceTable) %>DropdownsAndDivSelectRegions();
		}


		
		
		private void Bind<%= ClassName(SourceTable) %>DropdownsAndDivSelectRegions()
		{
		}
		#endregion
		#region Controller Methods
			
			public void Save<%= ClassName(SourceTable)%>(object sender, EventArgs e)
			{
				if (Validate()){
					<%= DAOName %>.Save(<%= ClassName(SourceTable) %>);
				}
			
			}
		
		#endregion
	}
	#endregion
		
}

<!-- #include file="NHibernate.inc" -->