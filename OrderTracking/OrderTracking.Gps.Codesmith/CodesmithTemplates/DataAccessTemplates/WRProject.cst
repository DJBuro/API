<%-- 
Name: WRProject.cst
Description: CodeSmith template for generating a codesmith project which implements the 'WRTable.cst' template on all the 'd_' and 'l_' tables in a given database
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="WRCommon.cst.cs" Inherits="WRCommon" Debug="True" Description="CodeSmith template for generating a codesmith project which implements the 'WRTable.cst' template on all the 'd_' and 'l_' tables in a given database" %>
<%-- Properties --%>
<%@ Property Name="DatabaseName" Type="WRDatabase" Category="Options" Description="Choose the William Reed database" %>
<%@ Property Name="AutoExecuteSQLScripts" Type="System.Boolean" Default="False" Category="Options"
	Description="Whether or not to immediately execute the SQL script(s) on the target database." %>
<%@ Property Name="SourceDatabaseName" Type="DatabaseSchema" Category="Source Data" Description="Choose the William Reed database to iterate for tables" %>
<%@ Property Name="NameSpace" Visible="False" Type="System.String" Default="changeMeNameSpace" Category="Options"
	Description="This is the project namespace which contains this data access class. It will be substituted in for XXX in following namespace: WilliamReed.XXX.Data.Base" %>
<%@ Property Name="ProcedurePrefix" Visible="False" Type="System.String" Default="csp_" Category="Options"
	Description="Prefix used in all stored procedure names. This is needed as this class will be using stored procedures" %>
<%@ Property Name="ExecutePermissions1" Type="WRStoredProcPermissions" Default="Ignore" Category="Stored Procedure Permissions"
	Description="All generated stored procedures will be given execute permissions for the selected user or role" %>
<%@ Property Name="ExecutePermissions2" Type="WRStoredProcPermissions" Default="Ignore" Category="Stored Procedure Permissions"
	Description="All generated stored procedures will be given execute permissions for the selected user or role" %>
<%@ Property Name="ExecutePermissions3" Type="WRStoredProcPermissions" Default="Ignore" Category="Stored Procedure Permissions"
	Description="All generated stored procedures will be given execute permissions for the selected user or role" %>
<%@ Property Name="IncludeDropStatements" Type="System.Boolean" Default="True" Category="Options"
	Description="If true drop statements will be generated to drop existing stored procedures." %>
<%@ Property Name="ExcludedColumns" Type="StringCollection" Default="" Optional="True" Category="Options"
	Description="If supplied, any columns in this list will be excluded from all stored procedures unless the column is part of the primary key. (* is treated as a wildcard)" %>
<%@ Property Name="ReadOnlyColumns" Type="StringCollection" Default="" Optional="True" Category="Options"
	Description="If supplied, any columns in this list will be treated as read only. (* is treated as a wildcard)" %>
<%@ Property Name="OrderByExpression" Type="System.String" Default="" Optional="True" Category="Options"
	Description="If supplied, this expression will be used to apply an order to the results on SELECT statements." %>
<%-- Assemblies and Imports --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.IO" %>
<%-- Assembly References --%>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%-- Validation--%>
<%
	if (DatabaseName == WRDatabase.Ignore)
	{
		ShowValidationError("Please choose a William Reed database other than 'Ignore' for property 'DatabaseName'.");
		return;
	}	
	
%>
<?xml version="1.0"?>
<codeSmith xmlns="http://www.codesmithtools.com/schema/csp.xsd">
  	<propertySets>
<%-- iterate all 'd_' and 'l' tables  --%>
<% 	for (int i=0; i<SourceDatabaseName.Tables.Count; i++) 
	{ 
		TableSchema table = SourceDatabaseName.Tables[i];
		if ((table.Name.ToLower().StartsWith("d_")) || (table.Name.ToLower().StartsWith("l_")))
		{
%>
		<propertySet output="<%= table.Name %>" template="<%= _templatePath %>">
		<property name="AutoExecuteScript"><%= AutoExecuteSQLScripts?"True":"False" %></property>
		<property name="ExecutePermissions1"><%= ExecutePermissions1 %></property>
		<property name="ExecutePermissions2"><%= ExecutePermissions2 %></property>
		<property name="ExecutePermissions3"><%= ExecutePermissions3 %></property>
		<property name="IncludeDropStatements"><%= IncludeDropStatements?"True":"False" %></property>
		<property name="ProcedurePrefix"><%= ProcedurePrefix %></property>
		<property name="TablePrefix"><%= table.Name.Substring(0,2) %></property>
		<property name="NameSpace"><%= NameSpace %></property>
		<property name="MainCodeFolder"><%= _mainCodeFolder %></property>
		<property name="ClassesFolder"><%= _classesFolder %></property>
		<property name="ScriptsFolder"><%= _scriptsFolder %></property>
		<property name="DatabaseName"><%= DatabaseName %></property>
		<property name="StoredProc1Database">Ignore</property>
		<property name="StoredProc1Return">Ignore</property>
		<property name="StoredProc2Database">Ignore</property>
		<property name="StoredProc2Return">Ignore</property>
		<property name="StoredProc3Database">Ignore</property>
		<property name="StoredProc3Return">Ignore</property>
		<property name="StoredProc4Database">Ignore</property>
		<property name="StoredProc4Return">Ignore</property>
		<property name="StoredProc5Database">Ignore</property>
		<property name="StoredProc5Return">Ignore</property>
		<property name="SourceTable">
			<connectionString><%= table.Database.ConnectionString %></connectionString>
			<providerType>SchemaExplorer.SqlSchemaProvider,SchemaExplorer.SqlSchemaProvider</providerType>
			<table>
			<owner><%= table.Owner %></owner>
			<name><%= table.Name %></name>
			</table>
		</property>
		</propertySet>
<% 		}
	} 
%>
	</propertySets>
</codeSmith>
<script runat="template">
	// loose the SourceTable property
	[Browsable(false)]	
	public override TableSchema SourceTable
	{
		get
		{
			return null;
		}
	}

	#region CodeSmith Project File
	protected string _codeSmithProjectFile = String.Empty;
	[Category("Output")]
	[FileDialog(FileDialogType.Save, Title="Select CodeSmith Project File", Filter="CodeSmith Project Files (*.csp)|*.csp|All Files (*.*)|*.*", DefaultExtension=".csp")]
	[EditorAttribute(typeof(CodeSmith.CustomProperties.FileNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
	[Description("Select CodeSmith Project File")]
	public virtual string CodeSmithProjectFile
	{
		get {return _codeSmithProjectFile;}
		set {_codeSmithProjectFile = value;}
	}

	protected override void OnPostRender(string result)
	{
		if (this.CodeSmithProjectFile.Length > 0)
		{
			FileStream stream = null;
			try
			{
				stream = new FileStream(this.CodeSmithProjectFile, FileMode.Create, FileAccess.Write);
				byte[] output = System.Text.Encoding.UTF8.GetBytes(result);
				stream.Write(output, 0, output.Length);
			}
			finally
			{
				if (stream != null) stream.Close();
			}
		}
		
		base.OnPostRender(result);
	}
	#endregion
	
	#region Path Of WRTable.csp Template File
	// path of WRTable.csp template file....
	protected string _templatePath = null;
	[Category("Template Location")]
	[FileDialog(FileDialogType.Open, Title="Locate WRTable.cst Template", Filter="CodeSmith Templates (*.cst)|*.cst|All Files (*.*)|*.*", DefaultExtension=".cst")]
	[EditorAttribute(typeof(CodeSmith.CustomProperties.FileNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
	[Description("Setup the full path of the WRTable.cst CodeSmith template to be used by this CodeSmith project")]
	public virtual string WRTableTemplateFullPath
	{
		get {return _templatePath;}
		set {_templatePath = value;}
	}
	#endregion

	#region Folders
	private string _mainCodeFolder;
	[Category("Output")]
	[Description("Select the folder where the main source code resides")]
 	[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
	public string MainCodeFolder
	{
 		get 
		{
			return _mainCodeFolder;
		}
 		set 
		{
			_mainCodeFolder = value;
		}
	}
	
	private string _classesFolder;
	[Category("Output")]
	[Description("Select the folder for the automatically generated class files, usually in folder called '\\base' off the main source code folder")]
 	[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
	public string ClassesFolder
	{
 		get 
		{
			return _classesFolder;
		}
 		set 
		{
			_classesFolder = value;
		}
	}
	
	private string _scriptsFolder;
	[Category("Output")]
	[Description("Select the folder for the automatically generated stored procedure script, usually in folder called '\\SqlScripts' off the main source code folder")]
 	[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
	public string ScriptsFolder
	{
 		get 
		{
			return _scriptsFolder;
		}
 		set 
		{
			_scriptsFolder = value;
		}
	}
	#endregion
	
</script>