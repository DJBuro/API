<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Holux</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Holux.BinaryEventReporting">
            <summary>
            Binary event report.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.Holux.HoluxBinaryBase">
            <summary>
            All typed binary Holux sentences should subclass this class.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.#ctor(GpsGate.Online.Directory.IMEI,System.Byte[])">
            <summary>
            Create typed Holux sentence.
            </summary>
            <param name="imei"></param>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Parse method of derived class should call this method to set TrackPoint value.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.SetEventType(GpsGate.Holux.HoluxEventType)">
            <summary>
            Parse method of derived class should call this method to set event type value.
            </summary>
            <param name="et"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.SetStatus(System.String,System.Object)">
            <summary>
            Used by parser to add status signal.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.Parse(System.Byte[])">
            <summary>
            Override to parse byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryBase.ToString">
            <summary>
            string for logging. EventType, IMEI, TrackPoint
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Holux.HoluxBinaryBase.Status">
            <summary>
            Status signals.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBinaryBase.IMEI">
            <summary>
            IMEI
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBinaryBase.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBinaryBase.EventType">
            <summary>
            Type of event.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.BinaryEventReporting.#ctor(GpsGate.Online.Directory.IMEI,System.Byte[])">
            <summary>
            Create binary event report.
            </summary>
            <param name="imei"></param>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Holux.BinaryEventReporting.Parse(System.Byte[])">
            <summary>
            Parse raw data.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Holux.BinaryStatusReporting">
            <summary>
            Binary status report
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.BinaryStatusReporting.#ctor(GpsGate.Online.Directory.IMEI,System.Byte[])">
            <summary>
            Create binary status report.
            </summary>
            <param name="imei"></param>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Holux.BinaryStatusReporting.Parse(System.Byte[])">
            <summary>
            Parse data as status reporting format.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Holux.EventReporting">
            <summary>
            Event reporting sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.Holux.HoluxBase">
            <summary>
            Base class for all typed Holux sentences
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxBase.#ctor(GpsGate.Holux.HoluxSentence)">
            <summary>
            Create from generic sentence
            </summary>
            <param name="sentence"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Holux.HoluxBase.SetStatus(System.String,System.Object)">
            <summary>
            Used by parser to add status variable.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBase.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Called by <see cref="M:GpsGate.Holux.HoluxBase.ParseSentence(Franson.Nmea.Sentence)"/> in derived class
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBase.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parses common fields in sentence
            </summary>
            <param name="sentence"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="P:GpsGate.Holux.HoluxBase.Status">
            <summary>
            Status variables.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBase.IMEI">
            <summary>
            IMEI number.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBase.EventType">
            <summary>
            Holux event type
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxBase.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="M:GpsGate.Holux.EventReporting.#ctor(GpsGate.Holux.HoluxSentence)">
            <summary>
            Create Event reporting sentence
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.Holux.EventReporting.IsEventReporting(GpsGate.Holux.HoluxSentence)">
            <summary>
            Returns true if this is likely to be a Holux Event Reporting sentence.
            </summary>
            <param name="sentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.EventReporting.BuildSentence">
            <summary>
            Not implemented
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.Holux.EventReporting.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parses sentence to paramaters.
            </summary>
            <param name="sentence"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="P:GpsGate.Holux.EventReporting.PhoneNumber">
            <summary>
            Device's phone number.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxBinaryParser">
            <summary>
            Parses Holux binary data format 
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.ParseDateTime(System.Byte[],System.Int32)">
            <summary>
            Parse a 4 byte Holux binary UTC date time.
            </summary>
            <param name="arrData"></param>
            <param name="iStartTime"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.ParseLonLatValue(System.Byte[],System.Int32)">
            <summary>
            Parses a 4 byte Holux binary longitude or latitude value.
            </summary>
            <param name="arrData">Holux binary data array</param>
            <param name="iStartIndex">Index where value start</param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.ParseEventType(System.Byte[],System.Int32)">
            <summary>
            Parses next byte as a Holux event type.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException">Index not inside data array.</exception>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.ParseInt16(System.Byte[],System.Int32)">
            <summary>
            Parses the next two bytes in array as a 16 bit integer. Big endian (most significant byte first).
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException">Index not inside data array.</exception>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.ParseIMEI(System.Byte[],System.Int32)">
            <summary>
            Parses Holux binary IMEI format, and returns a GpsGate IMEI object.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
            <exception cref="T:System.FormatException">Not a valid IMEI number</exception>
            <exception cref="T:System.IndexOutOfRangeException">Index not inside data array.</exception>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to parser.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBinaryParser.NextSentence">
            <summary>
            Parse for next binary sentence
            </summary>
            <returns></returns>
            <exception cref="T:System.FormatException">No valid Holux Binary Data</exception>
        </member>
        <member name="P:GpsGate.Holux.HoluxBinaryParser.BetweenPackets">
            <summary>
            Returns true if parser is between packets, and not in the middle parsing one.
            Will return true once, before flag is reset.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxBuilder">
            <summary>
            Builds Holux sentences.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Create sentence to send to device.
            </summary>
            <param name="bServerToDevice"></param>
            <param name="bSaveToFlash"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxBuilder.CreateSentence(System.Byte[])">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxSentence"/> object
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxBuilder.GetPrefix">
            <summary>
            Returns "#" for a server to device sentence
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxBuilder.GetPostfix">
            <summary>
            Returns *W0 or *W1 for a server to device sentence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxBuilder.HasChecksum">
            <summary>
            Returns false. Holux sentences has no checksum.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Holux.HoluxDeviceDefinition">
            <summary>
            All Holux device definitions inhertits from this class.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Common files for all Holux trackers.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listField"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxDeviceDefinition.AdjustTimeFilter(System.Int32)">
            <summary>
            Gets a suggested time filter and returns a time interval the device actually can use.
            </summary>
            <param name="iTimeFilter"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxDeviceDefinition.AdjustDeviceTransport(System.String)">
            <summary>
            Override to make sure that incoming transport is changed to a supported one.
            </summary>
            <param name="strTransport"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Holux.HoluxDeviceDefinition.SupportsTM">
            <summary>
            Override and return true if device type supports the TM command.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxDeviceDefinition.HoluxTechnicalName">
            <summary>
            Returns the holux technical name of the device. E.g. "GR515" for Holux Tracker007.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxDeviceDefinition.NamespaceName">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxHttpConnection">
            <summary>
            Handles a incoming http connection to a Holux device
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpConnection.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Create incoming http conenction object to Holux.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpConnection.Start">
            <summary>
            Sends content of DATA= entry in query string to protocol object.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxProtocol"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Not implemented.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:GpsGate.Holux.HoluxHttpListener">
            <summary>
            Receives Holux device connections over HTTP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpListener.CreateHttpConnection(System.Net.HttpListenerContext)">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxHttpConnection"/> object
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxHttpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 8008
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Holux.HoluxHttpListener.HttpPath">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="P:GpsGate.Holux.HoluxHttpListener.ProtocolID">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxEventType">
            <summary>
            Holux event type. Each report from tracker is marked with one of those types.
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.LowBattery">
            <summary>
            LB: Low battery
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.PowerOn">
            <summary>
            PO: Power on
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.PowerOff">
            <summary>
            PF: Power off
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.SystemOff">
            <summary>
            SO: System off
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.SOS">
            <summary>
            EM: Emergency, SOS request
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.ContinuousTracking">
            <summary>
            CT: Continous tracking timer event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.GeofenceExit">
            <summary>
            GFX: Geofence exit event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.GeofenceArrival">
            <summary>
            GFA: Geofence arrival event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.ParkExit">
            <summary>
            PARKX: Park exit event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.ParkArrival">
            <summary>
            PARKA: Park arrival event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.PositionRequest">
            <summary>
            PR: Position request response
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.TrackMode">
            <summary>
            TM: Track mode
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.MotionSensorWakeUp">
            <summary>
            MSX: Motion sensor  wake up event
            </summary>
        </member>
        <member name="F:GpsGate.Holux.HoluxEventType.SystemReset">
            <summary>
            SR: System reset.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxParser">
            <summary>
            Parses Holux data.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxParser.ParseHoluxDateTime(System.String)">
            <summary>
            Parses a field formated "YYYY-MM-DDThh:mm:ssZ". The time is assumed to be UTC.
            </summary>
            <param name="strField"></param>
            <returns></returns>
            <exception cref="T:Franson.Nmea.NmeaParserException">Field could not be parsed to a Holux UTC DateTime</exception>
        </member>
        <member name="M:GpsGate.Holux.HoluxParser.ParseHoluxEventType(System.String)">
            <summary>
            Parses a Holux status field. E.g. "LB" and returns the enum value.
            </summary>
            <param name="strField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxParser.#ctor">
            <summary>
            Creates parser with "GR" as prefix and fake "CRLF" as trailing pattern.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to parser.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxParser.CreateSentence(System.Byte[])">
            <summary>
            Throws exception.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:GpsGate.Holux.HoluxProtocol">
            <summary>
            Implements Holux protocol.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create holux protocol object
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Data from client. arrData is assumed to contain a complete message if data comes over http or SMS.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="P:GpsGate.Holux.HoluxProtocol.StringID">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxSentence">
            <summary>
            Holux generic  sentence.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxSentence.#ctor(System.Byte[])">
            <summary>
            Create Holux generic sentence.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Holux.HoluxSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to Holux trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for Holux.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.Holux.HoluxProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Holux.HoluxSmsListener">
            <summary>
            Holux SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxSmsListener.OnStart">
            <summary>
            Installs Holux protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called first time listener is installed.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Holux.HoluxSmsListener.ProtocolID">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxTcpConnection">
            <summary>
            Handles connection to a Holux device. E.g. 007 and 005
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Creates a Holux device connection from a socket.
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxTcpConnection.CreateProtocol">
            <summary>
            Returns Holux protocol object. <see cref="T:GpsGate.Holux.HoluxProtocol"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Holux.HoluxTcpListener">
            <summary>
            Handles a Holux device connected over TCP/IP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxTcpListener.OnStart">
            <summary>
            Called when listener is started.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxTcpConnection"/> object.
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 50005
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Holux.HoluxTcpListener.ProtocolID">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.HoluxUdpConnection">
            <summary>
            Holux UDP protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Holux UDP connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Holux.HoluxUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Holux.HoluxProtocol"/> object. Which is used to convert beween Holux and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Holux.HoluxUdpListener">
            <summary>
            Handles UDP datagrams from Holux devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.HoluxUdpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Holux.HoluxUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create new <see cref="T:GpsGate.Holux.HoluxUdpConnection"/> object for a Holux device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.HoluxUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 50005
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Holux.HoluxUdpListener.ProtocolID">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.StatusReporting">
            <summary>
            Holux StatusReporting
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.StatusReporting.#ctor(GpsGate.Holux.HoluxSentence)">
            <summary>
            Create StatusReporting sentence
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.Holux.StatusReporting.IsStatusReporting(GpsGate.Holux.HoluxSentence)">
            <summary>
            Returns true if sentence is of type StatusReporting.
            </summary>
            <param name="sentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.StatusReporting.BuildSentence">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:GpsGate.Holux.Track007DeviceDefinition">
            <summary>
            Defines the capabilities of Holux Tracker007 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.Track007DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Holux Tracker007 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Track007DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Track007DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Registers outgoing commands for Tracker007
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Track007DeviceDefinition.AdjustTimeFilter(System.Int32)">
            <summary>
            No lower limit.
            </summary>
            <param name="iTimeFilter"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Track007DeviceDefinition.AdjustDeviceTransport(System.String)">
            <summary>
            Returns argument. Makes no adjustments to suggested incoming transport.
            </summary>
            <param name="strTransport"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Holux.Track007DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Track007DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Track007DeviceDefinition.SupportsTM">
            <summary>
            Returns true. Tracker007 supports TM, e.g. fast tracking in both text and binary mode.
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Track007DeviceDefinition.HoluxTechnicalName">
            <summary>
            Returns "GR515"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.Tracker005DeviceDefinition">
            <summary>
            Defines the capabilities of Holux Tracker005 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Holux.Tracker005DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Holux Tracker005 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Tracker005DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Tracker005DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Registers outgoing commands for Tracker005
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Tracker005DeviceDefinition.AdjustTimeFilter(System.Int32)">
            <summary>
            Make sure value is above 180
            </summary>
            <param name="iTimeFilter"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Holux.Tracker005DeviceDefinition.AdjustDeviceTransport(System.String)">
            <summary>
            Returns "http"
            </summary>
            <param name="strTransport"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Holux.Tracker005DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Tracker005DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Tracker005DeviceDefinition.SupportsTM">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Tracker005DeviceDefinition.HoluxTechnicalName">
            <summary>
            Returns "GR530"
            </summary>
        </member>
        <member name="T:GpsGate.Holux.Command.HoluxGprsSettingsCmdExe">
            <summary>
            Handles outgoing _GprsSettings command for Holux
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.Command.HoluxGprsSettingsCmdExe.Execute">
            <summary>
            Sends Holux GPRS config SMS.
            </summary>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxGprsSettingsCmdExe.Namespace">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxGprsSettingsCmdExe.RequiresAck">
            <summary>
            Returns true. A Position should be sent back to server to confirm command.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.Command.HoluxPollPositionCmdExe">
            <summary>
            Handles outgoing _PollPosition command for Holux
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.Command.HoluxPollPositionCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxPollPositionCmdExe.Namespace">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxPollPositionCmdExe.RequiresAck">
            <summary>
            Returns true. Do not require ACK for Holux.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.Command.HoluxStartTrackingCmdExe">
            <summary>
            Handles outgoing _StartTracking command for Holux
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.Command.HoluxStartTrackingCmdExe.Execute">
            <summary>
            Starts tracking over HTTP at set interval.
            </summary>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxStartTrackingCmdExe.Namespace">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxStartTrackingCmdExe.RequiresAck">
            <summary>
            Returns true. Do not require ACK for Holux.
            </summary>
        </member>
        <member name="T:GpsGate.Holux.Command.HoluxStopTrackingCmdExe">
            <summary>
            Handles outgoing _StopTracking command for Holux
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Holux.Command.HoluxStopTrackingCmdExe.Execute">
            <summary>
            Sends SMS to device to stop tracking
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxStopTrackingCmdExe.Namespace">
            <summary>
            Returns "Holux"
            </summary>
        </member>
        <member name="P:GpsGate.Holux.Command.HoluxStopTrackingCmdExe.RequiresAck">
            <summary>
            Returns false. Do not require ACK for Holux.
            </summary>
        </member>
    </members>
</doc>
