<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Sanav</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Sanav.CT24DeviceDefinition">
            <summary>
            Defines the capabilities of Sanav CT24 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.Sanav.SanavDeviceDefinition">
            <summary>
            All Sanav device definitions inherit from this class.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavDeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Must be overriden by each device definition. The argument is tracking interval in seconds.
            The return value is field 3 in start tracking command - 6
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.SanavDeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            Override and return true if device type SMS configuration of phone number list.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.SanavDeviceDefinition.SupportsDistanceInterval">
            <summary>
            Return true if device support distance interval for command 6.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.SanavDeviceDefinition.SupportsEmptyGprsCredentials">
            <summary>
            If the GPRS username / password can be empty fields or not. If false then "guest" will be inserted into empty field.
            Default false. Override to change.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.CT24DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav CT-24 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT24DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT24DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT24DeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in minutes. Minimum value 1 is returned.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.CT24DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT24DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT24DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT24DeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            CT-24 does not support this command. Returns false.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT24DeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.CT58ADeviceDefinition">
            <summary>
            Defines the capabilities of Sanav CT-58A device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.CT58ADeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav CT-58A message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58ADeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58ADeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58ADeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in seconds.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.CT58ADeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58ADeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58ADeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58ADeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            CT-58A does support this command. Returns true.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58ADeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.CT58DeviceDefinition">
            <summary>
            Defines the capabilities of Sanav CT-58 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.CT58DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav CT-58 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.CT58DeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in seconds.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            CT-58 does support this command. Returns true.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.CT58DeviceDefinition.SupportsEmptyGprsCredentials">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.GC101DeviceDefinition">
            <summary>
            Defines the capabilities of Sanav GC-101 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.GC101DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav GC-101 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GC101DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GC101DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GC101DeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in seconds.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.GC101DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GC101DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GC101DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GC101DeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            GC-101 does not support this command. Returns false.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GC101DeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.GX101DeviceDefinition">
            <summary>
            Defines the capabilities of Sanav GX-101 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.GX101DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav GX-101 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GX101DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GX101DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.GX101DeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in seconds.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.GX101DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GX101DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GX101DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GX101DeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            GX-101 does not support this command. Returns false.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.GX101DeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.MT101DeviceDefinition">
            <summary>
            Defines the capabilities of Sanav MT-101 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.MT101DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            Add Sanav MT-101 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.MT101DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.MT101DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.MT101DeviceDefinition.TrackingInterval(System.Int32)">
            <summary>
            Returns value in seconds.
            </summary>
            <param name="iIntervalInSeconds"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.MT101DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.MT101DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.MT101DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.MT101DeviceDefinition.SupportsConfigPhoneNumberList">
            <summary>
            MT-101 does not support this command. Returns false.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.MT101DeviceDefinition.SupportsDistanceInterval">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavAspxConnection">
            <summary>
            Aspx connection for Sanav
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxConnection.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)">
            <summary>
            Create Sanav connection object.
            </summary>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Online.Net.Aspx.AspxProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavAspxProtocol">
            <summary>
            Sanav over HTTP
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create Sanav ASPX protocol
            </summary>
            <param name="nmeaConn"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxProtocol.ParseIMEI(System.Web.HttpRequest)">
            <summary>
            Returns IMEI
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxProtocol.ParseUsername(System.Web.HttpRequest)">
            <summary>
            Returns null
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxProtocol.ParsePassword(System.Web.HttpRequest)">
            <summary>
            Returns null
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavAspxProtocol.ParseGateMessage(System.Web.HttpRequest)">
            <summary>
            Returns SendMessage command.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:Franson.Nmea.NmeaFormatException">Report data could not be parsed.</exception>
        </member>
        <member name="P:GpsGate.Sanav.SanavAspxProtocol.StringID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavCtrlBuilder">
            <summary>
            Builds Sanav SMS sentences. Creates sentences in the format #username,pw,data,data*
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlBuilder.BuildSanavTransport(System.String)">
            <summary>
            Convert from GpsGate style transport e.g. "tcp" to Sanav style transport e.g. 7
            </summary>
            <param name="strTransport"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlBuilder.GetPrefix">
            <summary>
            Returns "#"
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlBuilder.GetPostfix">
            <summary>
            Returns "*"
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlBuilder.HasChecksum">
            <summary>
            Returns false
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlBuilder.CreateSentence(System.Byte[])">
            <summary>
            Returns a new <see cref="T:GpsGate.Sanav.SanavCtrlSentence"/> object.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavCtrlParser">
            <summary>
            Parses Sanav SMS messages.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlParser.IsErrorMessage(System.String)">
            <summary>
            Returns true if message is a likley SMS error message from Sanav.
            </summary>
            <param name="strMessage"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavCtrlSentence">
            <summary>
            Sanav sentence.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavCtrlSentence.#ctor(System.Byte[])">
            <summary>
            Sanav SMS.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Sanav.SanavHttpConnection">
            <summary>
            Handles a incoming http connection to a Sanav device
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavHttpConnection.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Create incoming http conenction object to Sanav.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavHttpConnection.Start">
            <summary>
            Sends content of DATA= entry in query string to protocol object.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavHttpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Sanav.SanavProtocol"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavHttpListener">
            <summary>
            Receives Sanav device connections over HTTP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavHttpListener.CreateHttpConnection(System.Net.HttpListenerContext)">
            <summary>
            Returns a <see cref="T:GpsGate.Sanav.SanavHttpConnection"/> object
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavHttpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 8008
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sanav.SanavHttpListener.HttpPath">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.SanavHttpListener.ProtocolID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavHumanReadableParser">
            <summary>
            Parses Sanav position reports. Returns null if the SMS wasnät parsed. Will not throw any exception.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:GpsGate.Sanav.SanavProtocol">
            <summary>
            Handles Sanav protocol.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create Sanav protocol adapater
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavProtocol.TranslateFromDevice(Franson.Message.ProviderMessage)">
            <summary>
            SMS from device.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            UDP, TCP, HTTP from device.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="P:GpsGate.Sanav.SanavProtocol.StringID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavReport">
            <summary>
            Sanav report
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavReport.#ctor(System.String,Franson.Nmea.RMC,System.String)">
            <summary>
            Create Sanav report object.
            </summary>
            <param name="strImei">Optional IMEI number</param>
            <param name="rmc"></param>
            <param name="strStatus"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavReport.ToString">
            <summary>
            Returns "Status, TrackPoint, IMEI"
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.SanavReport.Status">
            <summary>
            Returns status field of report. E.g. "SOS"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.SanavReport.TrackPoint">
            <summary>
            Returns track point.
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.SanavReport.IMEI">
            <summary>
            IMEI. Can be null.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavReportParser">
            <summary>
            Parses Sanav position reports.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavReportParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write new data to parser. Due to the Sanav protocol only one report can be parsed at a time.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavReportParser.Write(System.String)">
            <summary>
            Write ASCII string to parser.
            </summary>
            <param name="strData"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavReportParser.NextReport">
            <summary>
            Return next Sanav report found in data stream.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to Sanav trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for Sanav.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.Sanav.SanavProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavSmsListener">
            <summary>
            Sanav SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.Sanav.SanavSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavSmsListener.OnStart">
            <summary>
            Installs Sanav protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Adds default settings for Sanav.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sanav.SanavSmsListener.ProtocolID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavTcpConnection">
            <summary>
            Handles TCP/IP connection to a Sanav device.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Creates a Sanav device connection from a socket.
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavTcpConnection.CreateProtocol">
            <summary>
            Returns Sanav protocol object. <see cref="T:GpsGate.Sanav.SanavProtocol"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavTcpListener">
            <summary>
            Handles a Sanav device connected over TCP/IP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavTcpListener.OnStart">
            <summary>
            Called when listener is started.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Returns a <see cref="T:GpsGate.Sanav.SanavTcpConnection"/> object.
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 1337
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sanav.SanavTcpListener.ProtocolID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.SanavUdpConnection">
            <summary>
            Sanav UDP protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Sanav UDP connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Sanav.SanavUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Sanav.SanavProtocol"/> object. Which is used to convert beween Sanav and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sanav.SanavUdpListener">
            <summary>
            Handles UDP datagrams from Sanav devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sanav.SanavUdpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.SanavUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create new <see cref="T:GpsGate.Sanav.SanavUdpConnection"/> object for a Sanav device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sanav.SanavUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 1337
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sanav.SanavUdpListener.ProtocolID">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.Command.SanavGprsSettingsCmdExe">
            <summary>
            Handles outgoing _GprsSettings command for Sanav
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavGprsSettingsCmdExe.Execute">
            <summary>
            Sends config SMS to device.
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavGprsSettingsCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Continue with more steps.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
            <exception cref="T:GpsGate.Online.GateCmdException">Device returns error.</exception>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavGprsSettingsCmdExe.Namespace">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavGprsSettingsCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for Sanav.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.Command.SanavPollPositionCmdExe">
            <summary>
            Handles outgoing _PollPosition command for Sanav
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavPollPositionCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavPollPositionCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Handle response from device.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavPollPositionCmdExe.Namespace">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavPollPositionCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for Sanav.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.Command.SanavStartTrackingCmdExe">
            <summary>
            Handles outgoing _StartTracking command for Sanav
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavStartTrackingCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavStartTrackingCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Handle response from device.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavStartTrackingCmdExe.Namespace">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavStartTrackingCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for Sanav.
            </summary>
        </member>
        <member name="T:GpsGate.Sanav.Command.SanavStopTrackingCmdExe">
            <summary>
            Handles outgoing _StopTracking command for Sanav
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavStopTrackingCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.Sanav.Command.SanavStopTrackingCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Handle response from device.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavStopTrackingCmdExe.Namespace">
            <summary>
            Returns "Sanav"
            </summary>
        </member>
        <member name="P:GpsGate.Sanav.Command.SanavStopTrackingCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for Sanav.
            </summary>
        </member>
    </members>
</doc>
