<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.SysTech</name>
    </assembly>
    <members>
        <member name="T:GpsGate.SysTech.A1DeviceDefinition">
            <summary>
            IntelliTrac A1
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.SysTech.AFamilyDeviceDefinition">
            <summary>
            All IntelliTrac A-family trackers inherit from this class.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.IntelliTracDeviceDefinition">
            <summary>
            All IntelliTrac device definitions inherit from this class.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.IntelliTracDeviceDefinition.ProcessCustomSentence(GpsGate.SysTech.SysTechSentence,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Override to process custom sentences. E.g. CONT sentence from MUXy.
            </summary>
            <param name="sentence"></param>
            <param name="dicStatus">Add status variables to this dictionary.</param>
            <returns>Return null if sentence not processed. Return a TrackPoint with at least UTC time stamp set if sentence was processed.</returns>
        </member>
        <member name="M:GpsGate.SysTech.IntelliTracDeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechBinaryReport,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Override to add custom signals to binary reports.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="M:GpsGate.SysTech.IntelliTracDeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechRP,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Override to add device specific status messages to a report.
            </summary>
            <param name="dicStatus"></param>
            <param name="rp"></param>
        </member>
        <member name="P:GpsGate.SysTech.IntelliTracDeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "Unit ID"
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.IntelliTracDeviceDefinition.SupportsAngularTracking">
            <summary>
            Override and return true if device type supports angular tracking.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.IntelliTracDeviceDefinition.NamespaceName">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.AFamilyDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add fields common for IntelliTrac A1/A3.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.AFamilyDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register commands
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.AFamilyDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Returns null.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.AFamilyDeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechRP,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Process status messages for device.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="P:GpsGate.SysTech.AFamilyDeviceDefinition.SupportsAngularTracking">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.A1DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add IntelliTrac A1 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.A1DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.A1DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.A3DeviceDefinition">
            <summary>
            IntelliTrac A3
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.A3DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add IntelliTrac A3 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.A3DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.A3DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.P1DeviceDefinition">
            <summary>
            IntelliTrac P1
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.P1DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add fields common for IntelliTrac P1.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.P1DeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechBinaryReport,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Process status messages for device.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="M:GpsGate.SysTech.P1DeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechRP,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Process status messages for device.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="M:GpsGate.SysTech.P1DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.P1DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.P1DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBase">
            <summary>
            All typed SysTech sentences inherits from this class
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBase.#ctor(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Create typed sentence from generic sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBase.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Called by parser in derived class.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBase.SetStatus(System.String,System.Object)">
            <summary>
            Called by parser in derived class to add status variable.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBase.Prefix">
            <summary>
            Prefix e.g. "$OK"
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBase.Command">
            <summary>
            SysTech command string. E.g. "COMM"
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBase.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBase.TrackPoint">
            <summary>
            TrackPoint.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBase.Status">
            <summary>
            Returns all status variables.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryAck">
            <summary>
            SysTech binary Ack message.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryBase">
            <summary>
            All SysTech binary messages inherits from this class
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.#ctor(System.Byte[])">
            <summary>
            Create from binary data.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.#ctor">
            <summary>
            Create from parameters.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.Build">
            <summary>
            Override to build message from parameters
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.Parse(System.Byte[])">
            <summary>
            Override to parse binary data.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.ToByteArray">
            <summary>
            Return message as byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBase.ToString">
            <summary>
            Binary data in a readable for for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinaryBase.TransactionID">
            <summary>
            Transaction ID.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAck.#ctor(System.Int32,System.Boolean)">
            <summary>
            Create from paramaters.
            </summary>
            <param name="iTransactionID"></param>
            <param name="bSuccess"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAck.Build">
            <summary>
            Builds ack message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAck.Parse(System.Byte[])">
            <summary>
            Not implemented
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryAT">
            <summary>
            
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAT.#ctor(Franson.Nmea.Sentence)">
            <summary>
            Create binary wrapper around AT command.
            </summary>
            <param name="sentenceAT"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAT.IsAsciiATCommand(System.Byte[])">
            <summary>
            Returns true if array is an ASCII AT command, which can be wrapped by this class.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryAT.Build">
            <summary>
            Build binary AT message.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryBuilder">
            <summary>
            Build SysTech binary message.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryBuilder.BuildUInt16(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Add 16-bit unsigned integer (ushort) as big endian to buffer starting at index.
            </summary>
            <param name="iData">Integer to add</param>
            <param name="arrBuffer">Buffer to write to</param>
            <param name="iIndex">Index to start writing to.</param>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryHeartbeat">
            <summary>
            SysTech binary Heartbeat message.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryHeartbeat.#ctor(System.Byte[])">
            <summary>
            Create heartbeat message from binary data.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryHeartbeat.IsHeartbeat(System.Byte[])">
            <summary>
            Returns true if binary heartbeat message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryHeartbeat.Parse(System.Byte[])">
            <summary>
            Parse heartbeat.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryHeartbeat.Build">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinaryHeartbeat.IMEI">
            <summary>
            IMEI (or Modem ID)
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryParser">
            <summary>
            Parses SysTech binary data.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseDateTime(System.Byte[],System.Int32)">
            <summary>
            Parse SysTech binary date.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseUInt64(System.Byte[],System.Int32)">
            <summary>
            Parse big endian unsigned 64-bit integer (ulong). Most significant byte first in array.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseInt32(System.Byte[],System.Int32)">
            <summary>
            Parse big endian signed 32-bit integer (int).
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseUInt32(System.Byte[],System.Int32)">
            <summary>
            Parse big endian unsigned 32-bit integer (uint).
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseInt24(System.Byte[],System.Int32)">
            <summary>
            Parse big endian signed 24-bit integer.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseUInt16(System.Byte[],System.Int32)">
            <summary>
            Parse big endian unsigned 16-bit integer (ushort).
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryParser.ParseReport(System.Byte[])">
            <summary>
            Parses a SysTech bionary position report from a byte array. Returns null if parse failed.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinaryReport">
            <summary>
            SysTech binary position report.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryReport.#ctor(System.Byte[])">
            <summary>
            Create report from binary data.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryReport.IsReport(System.Byte[])">
            <summary>
            Returns true if this is a binary report.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryReport.Parse(System.Byte[])">
            <summary>
            Parse binary position report..
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinaryReport.Build">
            <summary>
            Not implemented
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinaryReport.IMEI">
            <summary>
            IMEI
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinaryReport.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinaryReport.Status">
            <summary>
            Status variables.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBinarySentence">
            <summary>
            Binary sentence. Reply to AT-commands.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinarySentence.#ctor(System.Byte[])">
            <summary>
            Create binary sentence.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinarySentence.IsSentence(System.Byte[])">
            <summary>
            Returns true if binary AT response.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinarySentence.Build">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBinarySentence.Parse(System.Byte[])">
            <summary>
            Parse binary sentence. (Response for AT command).
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBinarySentence.AsciiSentence">
            <summary>
            Returns a Ascii sentence.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechBuilder">
            <summary>
            Builds SysTech sentence.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.BuildSysTechDateTime(System.DateTime)">
            <summary>
            Returns a string in the format YYYYMMDDhhmmss
            </summary>
            <param name="dtUTC"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.SetATCommand(System.String)">
            <summary>
            Sets A1/A3 command. AT$ + Command
            </summary>
            <param name="strCommand"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.SetCommand(System.String,System.String,System.String)">
            <summary>
            Creates a command field X1/X8 style of prefix+command+tag
            </summary>
            <param name="strPrefix"></param>
            <param name="strCommand"></param>
            <param name="strTag"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.CreateSentence(System.Byte[])">
            <summary>
            Returns a <see cref="T:GpsGate.SysTech.SysTechSentence"/> object.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.HasChecksum">
            <summary>
            Returns false. SysTech sentences have no checksum.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechBuilder.GetDelimiter(System.Int32)">
            <summary>
            Returns "=" for first field.
            </summary>
            <param name="iFieldIndex"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.SysTechBuilder.EscapeUTF8">
            <summary>
            Returns false to avoid escaping of UTF8 fields.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechER">
            <summary>
            Represents a SysTech $ER sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechER.#ctor(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Create from generic sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechER.IsER(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Returns true if sentences is a $ER sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechER.BuildSentence">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechER.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parse sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechER.ErrorCode">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechOK">
            <summary>
            Represents a SysTech $OK sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechOK.#ctor(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Create typed sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechOK.IsOK(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Returns true if sentences is a $OK sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechOK.BuildSentence">
            <summary>
            Not implemented.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechOK.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            NOP.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="T:GpsGate.SysTech.SysTechParser">
            <summary>
            Parses SysTech IntelliTrac data
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechParser.ParseSysTechDateTime(System.String)">
            <summary>
            Parses a string of the format YYYYMMDDhhmmss
            </summary>
            <param name="strField"></param>
            <returns></returns>
            <exception cref="T:Franson.Nmea.NmeaParserException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechParser.#ctor">
            <summary>
            SysTech parser
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write SysTech data for parsing. Filters away sync message data.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechParser.CreateSentence(System.Byte[])">
            <summary>
            Returns a <see cref="T:GpsGate.SysTech.SysTechSentence"/> object.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechParser.ValidateSentence(System.Byte[])">
            <summary>
            Retutns true. SysTech doesn't use checksums.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.SysTech.SysTechProtocol">
            <summary>
            Base class for all SysTech protocols.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol object.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechProtocol.TranslateFromDevice(Franson.Message.ProviderMessage)">
            <summary>
            Process SMS
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            GPRS traffic. UDP and TCP.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechProtocol.CheckCrLf(System.Byte[])">
            <summary>
            Appends "\r\n" to arrData if it is missing and the Protocol is on ASCII mode. And it is not an outgoing sync message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.SysTechProtocol.IsBinaryProtocol">
            <summary>
            Returns true if this is a binary connection.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechProtocol.IsAsciiProtocol">
            <summary>
            Returns true if this is a ASCII protocol connection.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechProtocol.StringID">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechRP">
            <summary>
            Represents a SysTech $RP sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechRP.#ctor(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Create $RP sentence from generic sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechRP.IsRP(GpsGate.SysTech.SysTechSentence)">
            <summary>
            Returns true if sentences is a $RP sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechRP.BuildSentence">
            <summary>
            Throws exception
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechRP.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parse $RP sentence
            </summary>
            <param name="sentence"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:GpsGate.SysTech.SysTechRP.UnitID">
            <summary>
            UNIT ID
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechRP.ReportID">
            <summary>
            Report ID / MessageID
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechRP.SatelliteCount">
            <summary>
            Number of satellites used for fix.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechRP.Status">
            <summary>
            Thorws an exception. Call <see cref="M:GpsGate.SysTech.IntelliTracDeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechBinaryReport,System.Collections.Generic.Dictionary{System.String,System.Object})"/> to get status messages.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSentence.#ctor(System.Byte[])">
            <summary>
            Create from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSentence.GetCommand">
            <summary>
            Returns systech command e.g. for X1/X8 "COMM" from "$OK:COMM"
            And for A1/A3 "MODID" from "$MODID"
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSentence.Prefix">
            <summary>
            Returns prefix e.g. "$ST" for X1/X8. Returns null for A1/A3
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSentence.Tag">
            <summary>
            Returns tag, if used for X1/X8. Else returns null.
            Returns null always for A1/A3
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to SysTech trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for SysTech.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.SysTech.SysTechProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.SysTech.SysTechSmsListener">
            <summary>
            SysTech SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.SysTech.SysTechSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSmsListener.OnStart">
            <summary>
            Installs SysTech protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Adds default settings for SysTech.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSmsListener.ProtocolID">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechSyncMessage">
            <summary>
            Handles a SysTech sync message.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSyncMessage.#ctor(System.Byte[])">
            <summary>
            Create from parser.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSyncMessage.ToByteArray">
            <summary>
            Returns sync message as byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSyncMessage.ToString">
            <summary>
            Returns "UnitID"
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSyncMessage.SyncHeader">
            <summary>
            Returns SyndHeader - 0xF8FA
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSyncMessage.SyncID">
            <summary>
            Returns SyncID - e.g. 0x011B
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.SysTechSyncMessage.UnitID">
            <summary>
            ID of tracker connecting.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechSyncParser">
            <summary>
            Parse sync messages from tracker
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:GpsGate.SysTech.SysTechSyncParser.m_arrSyncHeaderST">
            <summary>
            SysTech sync header.
            </summary>
        </member>
        <member name="F:GpsGate.SysTech.SysTechSyncParser.m_arrSyncHeaderWP">
            <summary>
            Wonder Proud sync header.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSyncParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to parser
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechSyncParser.NextMessage">
            <summary>
            Returns next sync message from stream.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.SysTech.SysTechTcpConnection">
            <summary>
            Handles TCP/IP connection to a SysTech device.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Creates a SysTech device connection from a socket.
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpConnection.CreateProtocol">
            <summary>
            Returns SysTech protocol object. <see cref="T:GpsGate.SysTech.SysTechProtocol"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Checks if sent data is an AT command, and if it is adds a binary wrapper if the connection is binary.
            Adds "\r\n" to end of outgoing commands for ASCII protocol if not already exists.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.SysTech.SysTechTcpListener">
            <summary>
            Handles a SysTech device connected over TCP/IP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpListener.OnStart">
            <summary>
            Called when listener is started.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Returns a <see cref="T:GpsGate.SysTech.SysTechTcpConnection"/> object.
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 6090
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechTcpListener.ProtocolID">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.SysTechUdpConnection">
            <summary>
            SysTech UDP protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            SysTech UDP connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.SysTech.SysTechProtocol"/> object. Which is used to convert beween SysTech and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Checks if sent data is an AT command, and if it is adds a binary wrapper if the connection is binary.
            Adds "\r\n" to end of outgoing commands for ASCII protocol if not already exists.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.SysTech.SysTechUdpListener">
            <summary>
            Handles UDP datagrams from SysTech devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create new <see cref="T:GpsGate.SysTech.SysTechUdpConnection"/> object for a SysTech device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.SysTechUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 6090
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.SysTech.SysTechUdpListener.ProtocolID">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.X1DeviceDefinition">
            <summary>
            Defines the capabilities of SysTech IntelliTrac X1 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.SysTech.X1FamilyDeviceDefinition">
            <summary>
            All X1 style device definitions inherit from this class.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.XFamilyDeviceDefinition">
            <summary>
            All X family device definitions inherit from this class
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.X1FamilyDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add IntelliTrac X1 Pro message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X1FamilyDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Returns null. NOP.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X1FamilyDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register commands
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X1FamilyDeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechRP,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Add input and output digital signals to dicStatus. Fields 10 and 11 in a report. Override to add more status messages 
            for example values from a custom string.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="P:GpsGate.SysTech.X1DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1DeviceDefinition.SupportsAngularTracking">
            <summary>
            Returns false. Does not support angular tracking.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.X1PlusDeviceDefinition">
            <summary>
            Defines the capabilities of SysTech IntelliTrac X1 Plus device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.SysTech.X1PlusDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1PlusDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1PlusDeviceDefinition.SupportsAngularTracking">
            <summary>
            Returns true. Supports angular tracking.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.X1ProDeviceDefinition">
            <summary>
            Defines the capabilities of SysTech IntelliTrac X1 Pro device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.SysTech.X1ProDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1ProDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X1ProDeviceDefinition.SupportsAngularTracking">
            <summary>
            Returns true. Supports angular tracking.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.X8DeviceDefinition">
            <summary>
            Defines the capabilities of SysTech IntelliTrac X8 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.SysTech.X8DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add IntelliTrac X8 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X8DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X8DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register commands for X8
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.SysTech.X8DeviceDefinition.AddStatusMessages(GpsGate.SysTech.SysTechRP,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Add input and output digital signals to dicStatus. Fields 10 and 11 in a report. Override to add more status messages 
            for example values from a custom string.
            </summary>
            <param name="rp"></param>
            <param name="dicStatus"></param>
        </member>
        <member name="P:GpsGate.SysTech.X8DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X8DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.X8DeviceDefinition.SupportsAngularTracking">
            <summary>
            Returns false. Does not support angular tracking.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.Command.SysTechGprsSettingsCmdExe">
            <summary>
            Handles outgoing _GprsSettings command for SysTech
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechGprsSettingsCmdExe.Execute">
            <summary>
            Sends config SMS to device.
            </summary>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechGprsSettingsCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Continue with more steps.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechGprsSettingsCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for SysTech.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechGprsSettingsCmdExe.Namespace">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.Command.SysTechPollPositionCmdExe">
            <summary>
            Handles outgoing _PollPosition command for SysTech
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechPollPositionCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechPollPositionCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Continue executing pending command.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechPollPositionCmdExe.Namespace">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechPollPositionCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for SysTech.
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.Command.SysTechStartTrackingCmdExe">
            <summary>
            Handles outgoing _StartTracking command for SysTech
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechStartTrackingCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechStartTrackingCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Continue execute pending command.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechStartTrackingCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for SysTech.
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechStartTrackingCmdExe.Namespace">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="T:GpsGate.SysTech.Command.SysTechStopTrackingCmdExe">
            <summary>
            Handles outgoing _StopTracking command for SysTech
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechStopTrackingCmdExe.Execute">
            <summary>
            Sends position request to device
            </summary>
        </member>
        <member name="M:GpsGate.SysTech.Command.SysTechStopTrackingCmdExe.PendingCommit(System.Object,System.String)">
            <summary>
            Continue processing command.
            </summary>
            <param name="oDeviceData"></param>
            <param name="strCustomState"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechStopTrackingCmdExe.Namespace">
            <summary>
            Returns "SysTech"
            </summary>
        </member>
        <member name="P:GpsGate.SysTech.Command.SysTechStopTrackingCmdExe.RequiresAck">
            <summary>
            Returns true. Do require ACK for SysTech.
            </summary>
        </member>
    </members>
</doc>
