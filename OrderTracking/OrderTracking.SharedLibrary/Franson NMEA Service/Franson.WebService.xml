<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Franson.WebService</name>
    </assembly>
    <members>
        <member name="T:Franson.Localization.Service.LocalizationFacade">
            <summary>
            Base facade class that WebServices use to manage localization related objects.
            </summary>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetPhraseBook(System.Int32,System.String,System.String)">
            <summary>
            Get dictionary with translated phrases for the currentley loged in user and language <see cref="!:Module"/>.
            </summary>
            <param name="iAppId">ID identifieing the application to use</param>
            <param name="strModules">Language <see cref="!:Module"/></param>
            <param name="strLangPath">Path to locaize resource files</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetLanguages(System.String)">
            <summary>
            Get all languages found for the Server installation.
            (all valid ~/Resources/Languages/*.lang files)
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetSiteLanguage(System.String)">
            <summary>
            Get the server installation current default <see cref="T:Franson.Localization.Language"/>
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetUserLanguage(System.String,System.Int32)">
            <summary>
            Get the current laguage for the given user.
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <param name="iAppId">ID identifieing the application for which context to use.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetSiteLanguage(System.String,System.String)">
            <summary>
            Set the server installation default <see cref="T:Franson.Localization.Language"/>
            </summary>
            <param name="strLangKey">Name of language to be default. (Found in .lang file name XML attribute)</param>
            <param name="strPath">Virtual path to localized resource directory.</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetUserLanguage(System.Int32,System.String,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.Language"/> for the currentley loged in <see cref="T:Franson.Directory.User"/> 
            </summary>
            <param name="iApplicationID">ID of <see cref="T:Franson.Directory.Application"/> for which context the user is loged in to.</param>
            <param name="strLangKey">Name of language to use. (Found in .lang file name XML attribute)</param>
            <param name="strPath">Virtual path to localized resource directory.</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.ResetResourceCahche(System.String)">
            <summary>
            Resets the cached languages.
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetMeasurementTables(System.Int32,System.String)">
            <summary>
            Get all <see cref="T:Franson.Localization.MeasurementTable"/> found for the Server installation.
            (all valid ~/Resources/Languages/*.measure files)
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetUserMeasurementTable(System.Int32)">
            <summary>
            Get the current <see cref="T:Franson.Localization.MeasurementTable"/> for the given user.
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <param name="iAppId">ID identifieing the application for which context to use.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetUserMeasurementTable(System.Int32,System.String,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.MeasurementTable"/> for the currentley loged in <see cref="T:Franson.Directory.User"/> 
            </summary>
            <param name="iApplicationID">ID of <see cref="T:Franson.Directory.Application"/> for which context the user is loged in to.</param>
            <param name="strLangKey">Name of Measurement to use. (Found in .measure file name XML attribute)</param>
            <param name="strPath">Virtual path to localized resource directory.</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetSiteMeasurementTable(System.String)">
            <summary>
            Get the current <see cref="T:Franson.Localization.MeasurementTable"/> for the Site.
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetSiteMeasurementTable(System.String,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.MeasurementTable"/> for the Site. 
            </summary>
            <param name="strLangKey">Name of Measurement to use. (Found in .measure file name XML attribute)</param>
            <param name="strPath">Virtual path to localized resource directory.</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetTimeZone(System.String)">
            <summary>
            Get time zone by name
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetTimeZoneDescriptions">
            <summary>
            Get all <see cref="T:Franson.Localization.TimeZone"/> found for the Server installation.
            (all valid zones found in Resources/zoneinfo/zone.tab)
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetUserTimeZone(System.Int32)">
            <summary>
            Get the current <see cref="T:Franson.Localization.TimeZone"/> for the given user.
            </summary>
            <param name="iApplicationID">ID identifieing the application for which context to use.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetApplicationTimeZone(System.Int32)">
            <summary>
            Get the current <see cref="T:Franson.Localization.TimeZone"/> for the given application.
            </summary>
            <param name="iApplicationID">ID identifieing the application for which context to use.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.GetSiteTimeZone">
            <summary>
            Get the current site <see cref="T:Franson.Localization.TimeZone"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetApplicationTimeZone(System.Int32,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.TimeZone"/> for the given application
            </summary>
            <param name="iApplicationID">ID of <see cref="T:Franson.Directory.Application"/> for which context the user is loged in to.</param>
            <param name="strLangKey">Name of TimeZone</param>
        </member>
        <member name="M:Franson.Localization.Service.LocalizationFacade.SetSiteTimeZone(System.Int32,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.TimeZone"/> for the site
            </summary>
            <param name="strLangKey">Name of TimeZone</param>
        </member>
        <member name="T:Franson.Localization.Service.json.JsonLocalizationFacade">
            <summary>
            Json Version of LocalizationFacade base class.
            </summary>
        </member>
        <member name="P:Franson.Localization.Service.json.JsonLocalizationFacade.GetSessionID">
            <summary>
            Implements the ServiceBase abstract methods.
            Json Service receive the session ID from HttpCookie
            </summary>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetMeasurementTables(System.Int32)">
            <summary>
            Get all <see cref="T:Franson.Localization.MeasurementTable"/> found for the Server installation.
            (all valid ~/Resources/Languages/*.lang files)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetUserMeasurementTable(System.Int32)">
            <summary>
            Get the current <see cref="T:Franson.Localization.MeasurementTable"/> for the given user.
            </summary>
            <param name="appId">ID identifieing the application for which context to use.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.SetUserMeasurementTable(System.Int32,System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.MeasurementTable"/> for the currentley loged in <see cref="T:Franson.Directory.User"/> 
            </summary>
            <param name="iApplicationID">ID of <see cref="T:Franson.Directory.Application"/> for which context the user is loged in to.</param>
            <param name="appId">Name of Measurement to use. (Found in .measure file name XML attribute)</param>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetSiteMeasurementTable">
            <summary>
            Get the current <see cref="T:Franson.Localization.MeasurementTable"/> for the Site.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.SetSiteMeasurementTable(System.String)">
            <summary>
            Set the default <see cref="T:Franson.Localization.MeasurementTable"/> for the Site. 
            </summary>
            <param name="strMeasurementName">Name of Measurement to use. (Found in .measure file name XML attribute)</param>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetTimeZoneDescriptions">
            <summary>
            Get all <see cref="T:Franson.Localization.TimeZone"/> found for the Server installation.
            (all valid zones found in Resources/zoneinfo/zone.tab)
            </summary>
            <param name="strPath">Virtual path to localized resource directory.</param>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetUserTimeZone(System.Int32)">
            <summary>
            Get the users current <see cref="T:Franson.Localization.TimeZone"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetApplicationTimeZone(System.Int32)">
            <summary>
            Get the application current <see cref="T:Franson.Localization.TimeZone"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.GetSiteTimeZone">
            <summary>
            Get the site current <see cref="T:Franson.Localization.TimeZone"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Franson.Localization.Service.json.Locale.SetApplicationTimeZone(System.Int32,System.String)">
            <summary>
            Set the application <see cref="T:Franson.Localization.TimeZone"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Franson.Localization.Service.json.Locale.LocalizationFacade">
            <summary>
            Get the LocalizationFacade base
            </summary>
        </member>
        <member name="M:Franson.Map.Service.MapServiceBase.GetMaps(System.Int32,System.String)">
            <summary>
            Get Maps based on group.
            </summary>
            <param name="iAppId"></param>
            <param name="strGroupName"></param>
            <returns>Returns a Filled Serializable MapSearch object</returns>
        </member>
        <member name="M:Franson.Map.Service.MapServiceBase.RefreshMapData(System.String,System.Web.HttpContext)">
            <summary>
            Recursive scans for new MapData.xml files and parse the data into the databse.
            </summary>
            <param name="strPath">Base path to start the recursive search</param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Franson.Map.Service.MapServiceBase.GetMissingMapData(System.String)">
            <summary>
            Search for entities existing in the database but have been removed from the file system.
            </summary>
            <param name="strPath">Base path to start the recursive search</param>
            <returns>Missing mapdata files</returns>
        </member>
        <member name="M:Franson.Map.Service.MapServiceBase.GetOrphanMapData">
            <summary>
            Get MapData not currently belong to any MapLib
            </summary>
            <returns>Serialiable fill MapSearch object</returns>
        </member>
        <member name="M:Franson.Map.Service.MapServiceBase.GetUsedMapData">
            <summary>
            Map data currently used in a MapLib
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
