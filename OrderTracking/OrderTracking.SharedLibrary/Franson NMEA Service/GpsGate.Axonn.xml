<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Axonn</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition">
            <summary>
            Axonn AxTracker device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:GpsGate.Axonn.AxonnDeviceDefinition">
            <summary>
            All Axonn device definitions inhertits from this class.
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnDeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "ESN"
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnDeviceDefinition.NamespaceName">
            <summary>
            Returns "Axonn"
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Axonn AxTracker message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.InstallDefaultMessageFields(Franson.Message.MessageNamespace)">
            <summary>
            NOP. Do not install Speed as default field
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            NOP.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnAxTrackerDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnElocDeviceDefinition">
            <summary>
            Axonn ELOC device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnElocDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Axonn ELOC message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnElocDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnElocDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            NOP.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Axonn.AxonnElocDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnElocDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnFileConnection">
            <summary>
            Handles a incoming http connection from an Axonn device
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileConnection.#ctor(System.String)">
            <summary>
            Create from file name.
            </summary>
            <param name="strFileName"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileConnection.Start">
            <summary>
            NOT
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Axonn.AxonnXmlProtocol"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Not implemented.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:GpsGate.Axonn.AxonnFileConnection.Transport">
            <summary>
            Returns "sat" for satellite.
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnFileConnection.ClientAddress">
            <summary>
            Returns file name.
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnFileListener">
            <summary>
            Reads XML files from disk
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileListener.CreateFileConnection(System.String)">
            <summary>
            Return a new <see cref="T:GpsGate.Axonn.AxonnFileListener"/> object.
            </summary>
            <returns></returns>
            <param name="strFileName"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileListener.OnStart">
            <summary>
            Starts file reader.
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileListener.OnStop">
            <summary>
            Stops file reader.
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileListener.m_executeWebService(System.Object)">
            <summary>
            Called one for each web service per interval.
            </summary>
            <param name="oWebService"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnFileListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Install listener. Disabled by default.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Axonn.AxonnFileListener.Transport">
            <summary>
            Returns "file"
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnFileListener.ProtocolID">
            <summary>
            Returns "Axonn"
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnMMTDeviceDefinition">
            <summary>
            Axonn MMT device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnMMTDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Axonn MMT message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnMMTDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnMMTDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            NOP.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Axonn.AxonnMMTDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnMMTDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnReport">
            <summary>
            All Axonn reports inherits from this class.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnReport.#ctor(System.Xml.XmlReader)">
            <summary>
            Create.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnReport.SetESN(System.String)">
            <summary>
            Called by parser in derived class to set ESN.
            </summary>
            <param name="strESN"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnReport.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Called by parser in derived class to set TrackPoint.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnReport.AddStatus(System.String,System.Object)">
            <summary>
            Called by parser in derived class to add status value.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnReport.ParseXML(System.Xml.XmlReader)">
            <summary>
            Override to implement XML parser.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:GpsGate.Axonn.AxonnReport.ESN">
            <summary>
            ESN
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnReport.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnReport.Status">
            <summary>
            Status variables.
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnSmartOneDeviceDefinition">
            <summary>
            Axonn SmartOne device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnSmartOneDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add AxonnSmartOne message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnSmartOneDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxonnSmartOneDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            NOP.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Axonn.AxonnSmartOneDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.AxonnSmartOneDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxonnXmlParser">
            <summary>
            Parse Colombia Axonn XML format.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnXmlParser.#ctor(System.Xml.XmlReader)">
            <summary>
            Create parser.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnXmlParser.NextReport">
            <summary>
            Returns a report of null if there are no more reports to extract from XML stream.
            </summary>
            <returns></returns>
            <exception cref="T:System.FormatException">Unknown XML format</exception>
        </member>
        <member name="T:GpsGate.Axonn.AxonnXmlProtocol">
            <summary>
            Implements Fleet Analytics XML protocol.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.AxonnXmlProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol module for new incoming connection.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnXmlProtocol.ProcessXML(System.Xml.XmlReader,System.Xml.XmlWriter)">
            <summary>
            Parse XML as it came from same tracker.
            </summary>
            <param name="xmlFromDevice"></param>
            <param name="xmlToDevice"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxonnXmlProtocol.ProcessReport(GpsGate.Axonn.AxonnReport)">
            <summary>
            Process Axonn Report.
            </summary>
            <param name="report"></param>
        </member>
        <member name="P:GpsGate.Axonn.AxonnXmlProtocol.StringID">
            <summary>
            Returns "Axonn"
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.AxTrackerReport">
            <summary>
            AxTracker XML report.
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.AxTrackerReport.ParseAxTrackerHex(System.String)">
            <summary>
            Returns array from AxTracker payload e.g. 0x0008D486CA4257AA00
            </summary>
            <param name="strHex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxTrackerReport.ParseAxTrackerLongitude(System.Byte[],System.Int32)">
            <summary>
            Converts AxTracker 3 byte longitude to a decimal degree double.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxTrackerReport.ParseAxTrackerLatitude(System.Byte[],System.Int32)">
            <summary>
            Converts AxTracker 3 bytes latitude to deimal degree double.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.AxTrackerReport.#ctor(System.Xml.XmlReader)">
            <summary>
            Create from XML stream.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GpsGate.Axonn.AxTrackerReport.ParseXML(System.Xml.XmlReader)">
            <summary>
            Parse AxTracker XML.
            </summary>
            <param name="xmlReader"></param>
            <exception cref="T:System.FormatException">Error parsing payload.</exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:GpsGate.Axonn.ColombiaReport">
            <summary>
            Report from Columbia XML.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Axonn.ColombiaReport.ParseLocation(System.String,Franson.Geo.Position)">
            <summary>
            Parses a string like "CUNDINAMARCA*SANTA FE DE BOGOTA  D C*C 77 K 30*B Santa Sofia*Colombia" and returns
            a Location object which can be written to the reverse geocoder.
            STATE*CITY*ADDRESS*NEIGHBORHOOD*COUNTRY
            </summary>
            <param name="strLocation"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.ColombiaReport.ParseDateTime(System.String)">
            <summary>
            Parses a filed like "2009/10/19 12:04:49" to UTC
            </summary>
            <param name="strField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.ColombiaReport.TranslateField(System.String)">
            <summary>
            Maps a Colombia message field name to a MMT device type name.
            </summary>
            <param name="strColumbiaName"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.ColombiaReport.#ctor(System.Xml.XmlReader)">
            <summary>
            Create report from XML reader
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GpsGate.Axonn.ColombiaReport.ParseXML(System.Xml.XmlReader)">
            <summary>
            Parse XML report.
            </summary>
            <param name="xmlReader"></param>
        </member>
        <member name="T:GpsGate.Axonn.FleetHttpConnection">
            <summary>
            Handles a incoming http connection from an Axonn device
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpConnection.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Create incoming http conenction object to Axonn.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpConnection.Start">
            <summary>
            Process various Axonn XML formats.
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Axonn.AxonnXmlProtocol"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Not implemented.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:GpsGate.Axonn.FleetHttpConnection.Transport">
            <summary>
            Returns "sat" for satellite.
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.FleetHttpListener">
            <summary>
            
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpListener.OnStart">
            <summary>
            Called when listener is started.
            </summary>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpListener.CreateHttpConnection(System.Net.HttpListenerContext)">
            <summary>
            Returns new <see cref="T:GpsGate.Axonn.FleetHttpConnection"/> object.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.FleetHttpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 8008
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Axonn.FleetHttpListener.Transport">
            <summary>
            Returns "sat" for satellite.
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.FleetHttpListener.HttpPath">
            <summary>
            Returns "Axonn"
            </summary>
        </member>
        <member name="P:GpsGate.Axonn.FleetHttpListener.ProtocolID">
            <summary>
            Returns "Axonn"
            </summary>
        </member>
        <member name="T:GpsGate.Axonn.FleetReport">
            <summary>
            A Fleet Analytics XML report.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Axonn.FleetReport.ParseDateTime(System.String)">
            <summary>
            Returns a DateTime from a string formated as 4/15/2009 12:14:57 AM
            </summary>
            <param name="strField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Axonn.FleetReport.#ctor(System.Xml.XmlReader)">
            <summary>
            Create from XML stream.
            </summary>
            <param name="xmlReader"></param>
        </member>
        <member name="M:GpsGate.Axonn.FleetReport.ParseXML(System.Xml.XmlReader)">
            <summary>
            Parse a Fleet Analytic XML report.
            </summary>
            <param name="xmlReader"></param>
        </member>
    </members>
</doc>
