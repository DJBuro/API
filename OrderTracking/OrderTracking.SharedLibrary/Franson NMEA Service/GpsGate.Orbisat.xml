<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Orbisat</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Orbisat.LantrixDeviceDefinition">
            <summary>
            All Lantrix device definitions inhertits from this class.
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.LantrixDeviceDefinition.NamespaceName">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.LantrixT2000DeviceDefinition">
            <summary>
            Lantrix T2000 device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.LantrixT2000DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Lantrix T2000 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.LantrixT2000DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.LantrixT2000DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Enables _StartTracking, _StopTracking and _PollPosition.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Orbisat.LantrixT2000DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.LantrixT2000DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.Orbisat100DeviceDefinition">
            <summary>
            Orbisat 100 device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Orbisat 100 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Enables _StartTracking, _StopTracking and _PollPosition.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100DeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "Vehicle ID"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition">
            <summary>
            Orbisat 100 device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatDeviceDefinition">
            <summary>
            All Orbisat device definitions inhertits from this class.
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatDeviceDefinition.NamespaceName">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Orbisat 100 message fields over ORBCOMM.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Enables _StartTracking, _StopTracking and _PollPosition.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.Orbisat100OrbicommDeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "ORBCOMM ID"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatBinaryParser">
            <summary>
            Parses Orbisat binary data.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryParser.ParseHEXA(System.Int32)">
            <summary>
            E.g. 0x58 => 58.
            </summary>
            <param name="bteData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryParser.ParseLatitude(System.Byte[],System.Int32)">
            <summary>
            Parses a 3 byte Orbisat latitude value.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryParser.ParseLongitude(System.Byte[],System.Int32)">
            <summary>
            Parses a 3 byte Orbisat longitude value
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatBinaryReport">
            <summary>
            Report parsed from Orbisat binary data
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryReport.#ctor">
            <summary>
            NOP. Sub class must call <see cref="M:GpsGate.Orbisat.OrbisatBinaryReport.Parse(System.Byte[],System.DateTime)"/>
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryReport.#ctor(System.Byte[],System.DateTime)">
            <summary>
            Parse Orbisat binary report. Use message timestamp if the report doesn't contain a time stamp.
            </summary>
            <param name="arrData"></param>
            <param name="dtUTC"></param>
            <exception cref="T:Franson.Nmea.NmeaFormatException">Message could not be parsed.</exception>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryReport.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Used by parser in sub class.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryReport.AddStatus(System.String,System.Object)">
            <summary>
            Used by parser in sub class.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBinaryReport.Parse(System.Byte[],System.DateTime)">
            <summary>
            Override to implement parsers for more reports.
            </summary>
            <param name="arrData"></param>
            <param name="dtUTC"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatBinaryReport.TrackPoint">
            <summary>
            Returns TrackPoint
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatBinaryReport.Status">
            <summary>
            Status variables
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatBuilder">
            <summary>
            Builds Orbisat sentences.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBuilder.SetSentenceNumber(System.Int32)">
            <summary>
            Adds sentence number to sentence.
            </summary>
            <param name="iSentenceNumber"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatBuilder.CreateSentence(System.Byte[])">
            <summary>
            Returns a <see cref="T:GpsGate.Orbisat.OrbisatSentence"/>
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GpsGate.Orbisat.OrbisatBuilder.GetPostfix" -->
        <member name="P:GpsGate.Orbisat.OrbisatBuilder.IncludeAsterixInChecksum">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatEmailBase">
            <summary>
            Base class for all typed email data.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailParser.#ctor">
            <summary>
            Parses data like this [POSITION-REPORT:LAT=38.979908,LON=-76.534576]
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailParser.CreateSentence(System.Byte[])">
            <summary>
            Returns new <see cref="T:GpsGate.Orbisat.OrbisatEmailSentence"/> object.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailParser.ValidateSentence(System.Byte[])">
            <summary>
            Always returns true.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatEmailReport">
            <summary>
            Parses human readable messages for Orbisat
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailReport.#ctor(GpsGate.Orbisat.OrbisatEmailSentence,System.DateTime)">
            <summary>
            Create email report.
            </summary>
            <param name="sentence"></param>
            <param name="dtUTC"></param>
            <exception cref="T:Franson.Nmea.NmeaFormatException"></exception>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailReport.IsPositionReport(GpsGate.Orbisat.OrbisatEmailSentence)">
            <summary>
            Returns true if this is an "POSITION-REPORT" sentence.
            </summary>
            <param name="sentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailReport.BuildSentence">
            <summary>
            Not implemented
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatEmailReport.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatEmailSentence">
            <summary>
            Handles a sentence like this "[POSITION-REPORT:LAT=38.979908,LON=-76.534576]"
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatEmailSentence.GetCommand">
            <summary>
            Returns command e.g. "POSITION-REPORT"
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatOrbcommConnection">
            <summary>
            Orbisat connection over ORBCOMM satellite network.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatOrbcommConnection.#ctor(System.String)">
            <summary>
            Create new connection from Orbisat device over ORBCOMM.
            </summary>
            <param name="strMessageFrom"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatOrbcommConnection.CreateProtocol">
            <summary>
            Returns a new <see cref="T:GpsGate.Orbisat.OrbisatProtocol"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatOrbcommListener">
            <summary>
            Handles Orbcomm messages from Orbisat devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatOrbcommListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatOrbcommListener.CreateOrbcommConnection(System.String)">
            <summary>
            Create new <see cref="!:OrbisatOrbConnection"/> object for a Orbisat device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatOrbcommListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Listener enabled by default.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatOrbcommListener.ProtocolID">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatParser">
            <summary>
            Parses Orbicom (TAIP simlar) data.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatParser.CreateSentence(System.Byte[])">
            <summary>
            Returns a new <see cref="T:GpsGate.Orbisat.OrbisatSentence"/> object
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatParser.IncludeAsterixInChecksum">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatProtocol">
            <summary>
            Base class for all Orbisat protocols.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol object.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatProtocol.TranslateFromDevice(Franson.Message.ProviderMessage)">
            <summary>
            Process SMS and ORBCOMM messages.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            GPRS traffic. UDP and TCP.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatProtocol.TranslateToDevice(Franson.Nmea.Sentence)">
            <summary>
            Sends data back to device.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatProtocol.StringID">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatSentence">
            <summary>
            Generic Orbisat sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSentence.#ctor(System.Byte[])">
            <summary>
            Constructor called by parser.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatSentence.SentenceNumber">
            <summary>
            Returns Orbisat sentence number. (those generated by UNIT
            go from #0000 to #7FFF, and those
            generated by Base go from #8000 to #FFFF)
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to Orbisat trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for Orbisat.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.Orbisat.OrbisatProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatSmsListener">
            <summary>
            Orbisat SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.Orbisat.OrbisatSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSmsListener.OnStart">
            <summary>
            Installs Orbisat protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Enables listener by default.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatSmsListener.ProtocolID">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatTcpConnection">
            <summary>
            Orbisat Tcp protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Orbisat Tcp connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatTcpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Orbisat.OrbisatProtocol"/> object. Which is used to convert beween Orbisat and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatTcpListener">
            <summary>
            Handles Tcp datagrams from Orbisat devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatTcpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Create new <see cref="T:GpsGate.Orbisat.OrbisatTcpConnection"/> object for a Orbisat device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 4097
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatTcpListener.ProtocolID">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatUdpConnection">
            <summary>
            Orbisat UDP protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Orbisat UDP connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Orbisat.OrbisatProtocol"/> object. Which is used to convert beween Orbisat and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Orbisat.OrbisatUdpListener">
            <summary>
            Handles UDP datagrams from Orbisat devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatUdpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create new <see cref="T:GpsGate.Orbisat.OrbisatUdpConnection"/> object for a Orbisat device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.OrbisatUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 4097
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Orbisat.OrbisatUdpListener.ProtocolID">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.ReportBase">
            <summary>
            Base for all Orbisat reports (typed sentences).
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.ReportBase.#ctor(GpsGate.Orbisat.OrbisatSentence)">
            <summary>
            Create typed sentence from generic sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.Orbisat.ReportBase.AddStatus(System.String,System.Object)">
            <summary>
            Used by sentence parser to add status values returned by <see cref="!:GetStatus"/>
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="P:GpsGate.Orbisat.ReportBase.Status">
            <summary>
            Returns disctionary with status values for this Orbisat report.
            The object returned by this method is not thread safe.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Orbisat.ReportBase.SentenceNumber">
            <summary>
            Returns "sentence number"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.ReportPosition">
            <summary>
            Orbisat RGP sentence.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.ReportPosition.#ctor(GpsGate.Orbisat.OrbisatSentence)">
            <summary>
            Create GP sentence from generic sentence
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.Orbisat.ReportPosition.IsReportPosition(GpsGate.Orbisat.OrbisatSentence)">
            <summary>
            Returns true if this most likely is a Orbisat GP sentence
            </summary>
            <param name="sentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.ReportPosition.BuildSentence">
            <summary>
            Not implemented
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.Orbisat.ReportPosition.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parses generic sentence to typed sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="T:GpsGate.Orbisat.SmartReport17">
            <summary>
            DS300 Smart Report 17
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Orbisat.SmartReport17.#ctor(System.Byte[],System.DateTime,Franson.Geo.Position)">
            <summary>
            Create Smart Report 17.
            </summary>
            <param name="arrData"></param>
            <param name="dtUTC"></param>
            <param name="posOrigin"></param>
        </member>
        <member name="M:GpsGate.Orbisat.SmartReport17.Parse(System.Byte[],System.DateTime)">
            <summary>
            Parse SmartReport 17.
            </summary>
            <param name="arrData"></param>
            <param name="dtUTC"></param>
        </member>
        <member name="T:GpsGate.Orbisat.StellarDeviceDefinition">
            <summary>
            All Stellar device definitions inhertits from this class.
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.StellarDeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "ORBCOMM ID"
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.StellarDeviceDefinition.NamespaceName">
            <summary>
            Returns "Orbisat"
            </summary>
        </member>
        <member name="T:GpsGate.Orbisat.StellarDS300DeviceDefinition">
            <summary>
            Stellar DS300 device definition.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Orbisat.StellarDS300DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add Stellar DS300 message fields over ORBCOMM.
            </summary>
            <param name="deviceNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.StellarDS300DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.StellarDS300DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Enables _StartTracking, _StopTracking and _PollPosition.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Orbisat.StellarDS300DeviceDefinition.Install(Franson.Reflection.LoadableType)">
            <summary>
            Add setting for position offset in Report 17.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Orbisat.StellarDS300DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Orbisat.StellarDS300DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
    </members>
</doc>
