<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Franson.Map</name>
    </assembly>
    <members>
        <member name="P:Franson.Map.MapData.QueryUtcTimeStamp">
            <summary>
            Override to avoid serialization
            </summary>
        </member>
        <member name="M:Franson.Map.MapLib.ResolveMissingZoomLevels">
            <summary>
            Resolves missing zoom levels.
            Ex if zoom level 1,2,5 exist this method will change zoom level 5 to 3.
            </summary>
        </member>
        <member name="T:Franson.Map.MapDataZoom">
            <summary>
            Used for serialization to map MapData against zoom level for this MapLib
            </summary>
        </member>
        <member name="T:Franson.Map.MapManager">
            <summary>
            Handles MapData and Maps.
            Methods for updating and synchronizing file system map data with database records etc.
            </summary>
        </member>
        <member name="M:Franson.Map.MapManager.RefreshMapData(System.String)">
            <summary>
            Traversing the given directory and search for new MapData.xml files.
            Created new MapData from files and remove not found map data from DB.
            </summary>
            <param name="strPath"></param>
            <returns>Returns new MapData</returns>
        </member>
        <member name="M:Franson.Map.MapManager.GetMissingMapData(System.String)">
            <summary>
            Finds deprecated MapData. 
            Which means MapData records existing in the database but not in the file system
            </summary>
            <returns>Returns a list of MapData with missing file system records</returns>
        </member>
        <member name="M:Franson.Map.DAO.MapDAOFactory.GetDAOFactory">
            <summary>
            Get a data source dependent DAOFactory.  
            </summary>
            <returns>A DAOFactory object to be used to get DAO objects.</returns>
        </member>
        <member name="T:Franson.Map.DAO.MapLibDAOSQL">
            <summary>
            Represents a map
            Map is a collection of map_data
            </summary>
        </member>
        <member name="P:Franson.Map.DAO.MapLibDAOSQL.Name">
            <summary>
            Set and Get the name of map from/to database record
            
            DbType: varchar(45)
            </summary>
        </member>
    </members>
</doc>
