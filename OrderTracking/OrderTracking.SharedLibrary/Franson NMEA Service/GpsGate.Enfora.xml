<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Enfora</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Enfora.EnforaATResponse">
            <summary>
            Enfora AT response
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaMessage">
            <summary>
            Base class for all Enfora messages.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.#ctor(System.Byte[])">
            <summary>
            Create message.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.SetModemID(System.String)">
            <summary>
            Called by parser in derived class to set ModemID.
            </summary>
            <param name="strValue"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Called by parser in derived class to set track point.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.SetStatus(System.String,System.Object)">
            <summary>
            Called by parser in derived class to add status variable.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.Parse(System.Byte[])">
            <summary>
            Parse array.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Enfora.EnforaMessage.ToByteArray">
            <summary>
            Returns message as byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Enfora.EnforaMessage.ApiNumber">
            <summary>
            API number for Enfora message.
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.EnforaMessage.CommandType">
            <summary>
            Command type for Enfora message.
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.EnforaMessage.ModemID">
            <summary>
            ModemID. null if not set.
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.EnforaMessage.TrackPoint">
            <summary>
            TrackPoint
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.EnforaMessage.Status">
            <summary>
            Status variables
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaATResponse.#ctor(System.Byte[])">
            <summary>
            Create AT response.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaATResponse.IsATResponse(System.Byte[])">
            <summary>
            Returns true if byte array is a ATResponse message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaATResponse.Parse(System.Byte[])">
            <summary>
            Parse AT response.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaATResponse.ToString">
            <summary>
            Returns string for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Enfora.EnforaATResponse.Response">
            <summary>
            String returned by tracker.
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaBinaryAT">
            <summary>
            Frames a ascii AT command for sending over UDP or TCP to tracker
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaBinaryAT.#ctor(System.Byte[])">
            <summary>
            Create binary AT from AT string.
            </summary>
            <param name="arrAT"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaBinaryAT.ToByteArray">
            <summary>
            Return binary message.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaBuilder">
            <summary>
            Builds Enfora messages to be sent to tracker
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaDeviceDefinition">
            <summary>
            All Enfora device definitions inherit from this class.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add common Enfora message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="retListEntries"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Register outgoing commands for device type.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Enfora.EnforaDeviceDefinition.NamespaceName">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaError">
            <summary>
            Enfora Error message
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaError.#ctor(System.Byte[])">
            <summary>
            Create message.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaError.IsError(System.Byte[])">
            <summary>
            Returns true if byte array is a Error message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaError.Parse(System.Byte[])">
            <summary>
            Parse ModemID
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Enfora.EnforaError.ToString">
            <summary>
            Returns string for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Enfora.EnforaError.ResponseStatus">
            <summary>
            Response status.
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.GSM2208DeviceDefinition">
            <summary>
            Defines the capabilities of Enfora GSM2208 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Enfora.GSM2208DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add common Enfora message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="retListEntries"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Enfora.GSM2208DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.GSM2208DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.GSM2218DeviceDefinition">
            <summary>
            Defines the capabilities of Enfora GSM2218 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.Enfora.GSM2218DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.GSM2218DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.GSM2338DeviceDefinition">
            <summary>
            Defines the capabilities of Enfora GSM2338 device such as MessageFields, Default Mapper and Command support
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.Enfora.GSM2338DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.GSM2338DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.CommandType">
            <summary>
            Command type
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandRead">
            <summary>
            Read request
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandWrite">
            <summary>
            Write request
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandStatus">
            <summary>
            General status information.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandError">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandAT">
            <summary>
            AT command
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandResponse">
            <summary>
            AT response
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.CommandType.CommandModemID">
            <summary>
            Modem ID, TCP only.
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.ApiNumber">
            <summary>
            API number
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.ReadGpsBinary">
            <summary>
            Read GOS binary.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.WriteAck">
            <summary>
            ACK to tracker.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.WritePassword">
            <summary>
            Password to tracker
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.StatusAscii">
            <summary>
            Ascii report from tracker.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.StatusBinary">
            <summary>
            Binary report from tracker.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.StatusTaip">
            <summary>
            Taip report from tracker.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.StatusMsgsnd">
            <summary>
            $MSGSND report from tracker.
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.StatusWakeup">
            <summary>
            Ascii report with Param2 less than 256
            </summary>
        </member>
        <member name="F:GpsGate.Enfora.ApiNumber.ModemID">
            <summary>
            ModemID
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaModemID">
            <summary>
            Command type 10, ModemID.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaModemID.#ctor(System.Byte[])">
            <summary>
            Create ModemID message from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaModemID.IsModemID(System.Byte[])">
            <summary>
            Returns true if byte array is a ModemID message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaModemID.Parse(System.Byte[])">
            <summary>
            Parse ModemID
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Enfora.EnforaModemID.ToString">
            <summary>
            Returns string for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaParser">
            <summary>
            Parses incoming stream of 
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseBinaryLatitude(System.Byte[],System.Int32)">
            <summary>
            Enfors binary latitude field.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseBinaryLongitude(System.Byte[],System.Int32)">
            <summary>
            Enfors binary longitude field.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseBinaryDateTime(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Parse Enfora binary DateTime.
            </summary>
            <param name="arrData"></param>
            <param name="iIndexDate"></param>
            <param name="iIndexTime"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseInt32(System.Byte[],System.Int32)">
            <summary>
            Parse 4 byte big endian to int.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseInt24(System.Byte[],System.Int32)">
            <summary>
            Parse 3 byte big endian to int. Most significant bit will be used as sign.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseInt16(System.Byte[],System.Int32)">
            <summary>
            Parse 2 byte big endian to int.
            </summary>
            <param name="arrData"></param>
            <param name="iIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.ParseString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Parse ascii byte data to string. Set iLength to zero to parse to end of string.
            </summary>
            <param name="arrData">Data to parse</param>
            <param name="iIndex">Where to start</param>
            <param name="iLength">How many bytes to include. Set to zero to parse to end of array.</param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.#ctor(System.Boolean)">
            <summary>
            Create parser
            </summary>
            <param name="bTcpStyle"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.Write(System.Byte[])">
            <summary>
            Write data to be parsed.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaParser.NextMessage">
            <summary>
            Parse next message.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaProtocol">
            <summary>
            Implements Enfora protocol.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaProtocol.TranslateFromDevice(Franson.Message.ProviderMessage)">
            <summary>
            Parse message (SMS) from device.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Parse data from device over IP.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="P:GpsGate.Enfora.EnforaProtocol.StringID">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to Enfora trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for Enfora.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.Enfora.EnforaProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaSmsListener">
            <summary>
            Enfora SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.Enfora.EnforaSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaSmsListener.OnStart">
            <summary>
            Installs Enfora protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Adds default settings for Enfora. Enable by default.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Enfora.EnforaSmsListener.ProtocolID">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatus">
            <summary>
            All Enfora status messages inherits from this class.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatus.#ctor(System.Byte[])">
            <summary>
            Create status message,
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatusAscii">
            <summary>
            Enfora Status Ascii message.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusAscii.#ctor(System.Byte[])">
            <summary>
            Create Status ascii message.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusAscii.IsStatusAscii(System.Byte[])">
            <summary>
            Returns true if data is an Enfora Ascii status message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusAscii.Parse(System.Byte[])">
            <summary>
            Parse byte array to ascii status message.
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusAscii.ToString">
            <summary>
            Returns string for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatusBinary">
            <summary>
            Enfora binary status message
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusBinary.#ctor(System.Byte[])">
            <summary>
            Create binary message from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusBinary.IsStatusBinary(System.Byte[])">
            <summary>
            Returns true if data is an Enfora Binary status message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusBinary.Parse(System.Byte[])">
            <summary>
            Parse byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusBinary.ToString">
            <summary>
            Returns string for logging.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatusMsgsnd">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusMsgsnd.#ctor(System.Byte[])">
            <summary>
            Create MSGSND message from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatusTaip">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusTaip.#ctor(System.Byte[])">
            <summary>
            Create Enfora TAIP message from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Enfora.EnforaStatusWakeup">
            <summary>
            Enfora status Wakup message.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusWakeup.#ctor(System.Byte[])">
            <summary>
            Create message from byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusWakeup.IsWakup(System.Byte[])">
            <summary>
            Returns true if byte array is a Wakup message.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusWakeup.Parse(System.Byte[])">
            <summary>
            Parse Wakeup
            </summary>
            <param name="arrData"></param>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:GpsGate.Enfora.EnforaStatusWakeup.ToString">
            <summary>
            Return string for logging purposes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Enfora.EnforaTcpConnection">
            <summary>
            Handles TCP/IP connection to a Enfora device.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Creates a Enfora device connection from a socket.
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpConnection.CreateProtocol">
            <summary>
            Returns Enfora protocol object. <see cref="T:GpsGate.Enfora.EnforaProtocol"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Adds binary frame to AT commands. Other data is just passed through
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Enfora.EnforaTcpListener">
            <summary>
            Handles a Enfora device connected over TCP/IP
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpListener.OnStart">
            <summary>
            Called when listener is started.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Returns a <see cref="T:GpsGate.Enfora.EnforaTcpConnection"/> object.
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed. Enable by default.
            Sets default server port to 1721
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Enfora.EnforaTcpListener.ProtocolID">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.EnforaUdpConnection">
            <summary>
            Enfora UDP protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Enfora UDP connection
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Enfora.EnforaProtocol"/> object. Which is used to convert beween Enfora and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Adds binary frame to AT commands. Other data is just passed through
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.Enfora.EnforaUdpListener">
            <summary>
            Handles UDP datagrams from Enfora devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create new <see cref="T:GpsGate.Enfora.EnforaUdpConnection"/> object for a Enfora device.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Enfora.EnforaUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 1721
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Enfora.EnforaUdpListener.ProtocolID">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
        <member name="T:GpsGate.Enfora.Command.EnforaGprsSettingsCmdExe">
            <summary>
            Handles outgoing _GprsSettings command for Enfora
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Enfora.Command.EnforaGprsSettingsCmdExe.Execute">
            <summary>
            Throws exception
            </summary>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="P:GpsGate.Enfora.Command.EnforaGprsSettingsCmdExe.RequiresAck">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:GpsGate.Enfora.Command.EnforaGprsSettingsCmdExe.Namespace">
            <summary>
            Returns "Enfora"
            </summary>
        </member>
    </members>
</doc>
