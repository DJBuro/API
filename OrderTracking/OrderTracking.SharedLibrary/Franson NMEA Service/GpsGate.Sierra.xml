<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.Sierra</name>
    </assembly>
    <members>
        <member name="T:GpsGate.Sierra.MP700DeviceDefinition">
            <summary>
            Defines the capabilities of Sierra MP700 device such as MessageFields, Default Mapper and Command support
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.MP700DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Install status fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MP700DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Returns null. No default mapping.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MP700DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Returns null
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sierra.MP700DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.MP700DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.MP700DeviceDefinition.NamespaceName">
            <summary>
            Returns "Sierra"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpBuilder">
            <summary>
            Bild a MTP packet
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.MtpBuilder.AddField(GpsGate.Sierra.MtpField)">
            <summary>
            Add MTP filed to packet.
            </summary>
            <param name="filed"></param>
        </member>
        <member name="M:GpsGate.Sierra.MtpBuilder.ToByteArray">
            <summary>
            Buold byte array and return
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sierra.MtpBuilder.MessageID">
            <summary>
            MTP Message ID
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.MtpBuilder.DeviceID">
            <summary>
            Device ID (derived from IMEI)
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpFieldID">
            <summary>
            Possible fields in a MTP message.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_UNKNOWN">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_ENGINE_ID">
            <summary>
            Engine ID.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_SR_MP_NAME">
            <summary>
            Device name
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_SR_GPS_TAIP">
            <summary>
            TAIP data
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_SR_GPS_NMEA">
            <summary>
            NMEA data.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_SR_RSSI_MEAS">
            <summary>
            Current RSSI measurement in dBm
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_SR_IO_STATUS">
            <summary>
            Digital input, alarm, battery, and ignition status.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpFieldID.MT_ARI_DIO_ALM_ACK">
            <summary>
            Digital input alarm acknowledgement.
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpStatus">
            <summary>
            MP7xx signal.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Digital1">
            <summary>
            Digital input 1
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Digital2">
            <summary>
            Digital input 2
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Digital3">
            <summary>
            Digital input 3
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Digital4">
            <summary>
            Digital input 4
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Alarm1">
            <summary>
            Latched alarm 1
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Alarm2">
            <summary>
            Latched alarm 2
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Alarm3">
            <summary>
            Latched alarm 3
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Alarm4">
            <summary>
            Latched alarm 4
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.BatteryLow">
            <summary>
            Battery low
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpStatus.Ignition">
            <summary>
            Ignition on
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpField">
            <summary>
            Represents onr filed in a MTP packet.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.#ctor(GpsGate.Sierra.MtpFieldID,System.Byte[])">
            <summary>
            Create MTP field from byte array.
            </summary>
            <param name="fieldID"></param>
            <param name="arrArgument"></param>
            <exception cref="T:System.ArgumentException">If argument is null</exception>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.#ctor(GpsGate.Sierra.MtpFieldID,System.Byte)">
            <summary>
            Creates a byte field
            </summary>
            <param name="fieldID"></param>
            <param name="bData"></param>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.#ctor(GpsGate.Sierra.MtpFieldID,System.String,System.Text.Encoding)">
            <summary>
            Sets a string field.
            </summary>
            <param name="fieldID"></param>
            <param name="strData"></param>
            <param name="enc">string encoding.</param>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsByteArray">
            <summary>
            Return argument as unchanged byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsByte">
            <summary>
            Return first byte in argument array.
            </summary>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException">If no argument data</exception>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsUnicode">
            <summary>
            Return argument as unicode string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsAscii">
            <summary>
            Return argument as ASCII string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsShort">
            <summary>
            Return argument as big endian 2 byte integer.
            </summary>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException">If no argument data</exception>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsInteger">
            <summary>
            Return argument as big endian 4 byte integer.
            </summary>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException">If no argument data</exception>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.GetAsStatusDictionary">
            <summary>
            Returns a status dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.ToByteArray">
            <summary>
            Returns complete field as one byte array. Including ID, length and argument.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.MtpField.ToString">
            <summary>
            For logging.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sierra.MtpMessageID">
            <summary>
            MTP message ID.
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_SUM_REG_IND">
            <summary>
            Unsolicited summary/registration information. 
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_CONF_RSP">
            <summary>
            Response to configuration
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_SUM_RSP">
            <summary>
            Response to summary
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_CONF_REQ">
            <summary>
            Configuration request
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_SUM_REQ">
            <summary>
            Request summary
            </summary>
        </member>
        <member name="F:GpsGate.Sierra.MtpMessageID.MT_ALM_RST_IND">
            <summary>
            Latched alarm reset
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpPacket">
            <summary>
            Represents a MTP packet. Used by Sierra Wireless devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.MtpPacket.#ctor(System.Int32,System.Byte[])">
            <summary>
            Create packet.
            </summary>
            <param name="iDeviceID"></param>
            <param name="arrPacket"></param>
            <exception cref="T:GpsGate.Sierra.MtpFormatException">If byte array doesn't contain a valid MTP packet</exception>
        </member>
        <member name="M:GpsGate.Sierra.MtpPacket.GetField(GpsGate.Sierra.MtpFieldID)">
            <summary>
            Returns MTP field with specified ID. Returns null if not exists.
            </summary>
            <param name="fieldID"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sierra.MtpPacket.DeviceID">
            <summary>
            Device ID, derived from IMEI.
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.MtpPacket.MessageID">
            <summary>
            MTP Message ID.
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.MtpParser">
            <summary>
            Parses Sierra MTP (Monitoring and Tracking Protocol) packets.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.MtpParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to parser. Call <see cref="M:GpsGate.Sierra.MtpParser.NextPacket"/> to return parsed packets.
            </summary>
            <param name="arrData"></param>
            <param name="iLength"></param>
            <param name="iStartIndex"></param>
        </member>
        <member name="M:GpsGate.Sierra.MtpParser.NextPacket">
            <summary>
            Returns parsed MTP packet. Returns null if there are no more packets in buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sierra.MtpFormatException">
            <summary>
            A format expection in MTP packet.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.MtpFormatException.#ctor(System.String)">
            <summary>
            Create exception.
            </summary>
            <param name="strMessage"></param>
        </member>
        <member name="T:GpsGate.Sierra.RapFormatException">
            <summary>
            Format exception in RAP report.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.RapFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Create exception
            </summary>
            <param name="strMessage"></param>
            <param name="ex"></param>
        </member>
        <member name="M:GpsGate.Sierra.RapFormatException.#ctor(System.String)">
            <summary>
            Create exception.
            </summary>
            <param name="strMessage"></param>
        </member>
        <member name="T:GpsGate.Sierra.SierraProtocol">
            <summary>
            Implements Sierra Wireless protocol.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.SierraProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol for incoming connection.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Sierra.SierraProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Data from device
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="P:GpsGate.Sierra.SierraProtocol.StringID">
            <summary>
            Returns "Sierra"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.SierraUdpConnection">
            <summary>
            Handles one connection to one Sierra Wireless device.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.SierraUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create NmeaConnection for incoming connection.
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Sierra.SierraUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Sierra.SierraProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sierra.SierraUdpListener">
            <summary>
            Handles connections to Sierra Wireless devices.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.SierraUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Returns a new <see cref="T:GpsGate.Sierra.SierraUdpConnection"/> object.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.SierraUdpListener.OnStart">
            <summary>
            Installs "Sierra" protocol.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.SierraUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener is installed.
            Sets default port to 8002
            Installs protocol.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sierra.SierraUdpListener.ProtocolID">
            <summary>
            Returns "Sierra"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.PinPointDeviceDefinition">
            <summary>
            All PinPoint device definitions inherit from this class.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointDeviceDefinition.DeviceIdentifierLabel">
            <summary>
            Returns "DEVICEID"
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointDeviceDefinition.NamespaceName">
            <summary>
            Returns "PinPoint"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.PinPointProtocol">
            <summary>
            Handles Sierra PinPoint protocol
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol object for PinPoint
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            UDP datagram from device
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
            <exception cref="T:Franson.Directory.AuthenticationException"></exception>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointProtocol.StringID">
            <summary>
            Returns "PinPoint"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.PinPointUdpConnection">
            <summary>
            Handles one connection to one PinPoint device.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointUdpConnection.#ctor(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Create NmeaConnection for incoming connection.
            </summary>
            <param name="wrapper"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointUdpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.Sierra.PinPoint.PinPointProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.PinPointUdpListener">
            <summary>
            Handles connections to Sierra Wireless PinPoint devices.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointUdpListener.CreateUdpConnection(GpsGate.Online.Net.Udp.UdpClientWrapper)">
            <summary>
            Returns a new <see cref="T:GpsGate.Sierra.PinPoint.PinPointUdpConnection"/> object.
            </summary>
            <param name="wrapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointUdpListener.OnStart">
            <summary>
            Installs "PinPoint" protocol.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointUdpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener is installed.
            Sets default port to 22335
            Installs protocol.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointUdpListener.ProtocolID">
            <summary>
            Returns "PinPoint"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition">
            <summary>
            PinPoint XT device definition
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Message fields for PinPoint XT
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listEntries"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            No default mapping.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            No commands.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.Name">
            <summary>
            Returns "Sierra PinPoint XT"
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.PinPointXTDeviceDefinition.SupportsStaticIP">
            <summary>
            Returns the device support of static IP address.
            
            Sierra PinPoint XT return "true"
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapBuilder">
            <summary>
            Builds RAP packages
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapBuilder.Reset">
            <summary>
            Reset builder
            </summary>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapGpsReport">
            <summary>
            Rap GPS report
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapReport">
            <summary>
            All Rap packages derives from this class
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.#ctor(System.Byte[])">
            <summary>
            Create report.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.ReportStartIndex(System.Byte[])">
            <summary>
            Return start index of report data in package. Considers if there is a device ID chunk in start.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.SetTrackPoint(Franson.Geo.TrackPoint)">
            <summary>
            Used by parser in sub class to set track point.
            </summary>
            <param name="tp"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.AddStatus(System.String,System.Object)">
            <summary>
            Used by parser in sub class to add status variable.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.ParseReport(System.Byte[],System.Int32)">
            <summary>
            Will be called when object is created. Sub class should override.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex">Where report data starts</param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapReport.ToString">
            <summary>
            Returns string for logging: DeviceID, TrackPoint, Status count
            </summary>
            <returns></returns>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.RapReport.DeviceID">
            <summary>
            Device ID in the following format - 0x800000007B01A8C0
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.RapReport.ReportType">
            <summary>
            Report type.
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.RapReport.TrackPoint">
            <summary>
            TrackPoint, or null if this report has no track point.
            </summary>
        </member>
        <member name="P:GpsGate.Sierra.PinPoint.RapReport.Status">
            <summary>
            Dictionary with all status variables. Returns dictionary is not thread safe.
            </summary>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapGpsReport.#ctor(System.Byte[])">
            <summary>
            Create report from parsed byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapGpsReport.IsGpsReport(System.Byte[])">
            <summary>
            Returns true if byte array probably contains a GPS report.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapGpsReport.ParseReport(System.Byte[],System.Int32)">
            <summary>
            Parse GPS report.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <exception cref="T:GpsGate.Sierra.RapFormatException"></exception>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapParser">
            <summary>
            Parses PinPoint Rap data.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapMask(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Checks if AND mask is true.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iMask"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapInt16(System.Byte[],System.Int32)">
            <summary>
            Returns RAP int16 (16-bit little endian) from byte array.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapInt32(System.Byte[],System.Int32)">
            <summary>
            Returns RAP integer (32-bit little endian) from byte array.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapHeading(System.Byte[],System.Int32)">
            <summary>
            Parses RAP heading field.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapCoordinate(System.Byte[],System.Int32)">
            <summary>
            Parses RAP coordinate.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapDateTime(System.Byte[],System.Int32)">
            <summary>
            Parses RAP date + time and returns DateTime value.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseRapShortDateTime(System.Byte[],System.Int32)">
            <summary>
            Parses RAP time and adds system UTC now as date.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapParser.ParseReport(System.Byte[])">
            <summary>
            Parses byte array and returns the correct RAP report (or an exception)
            </summary>
            <param name="arrData"></param>
            <returns></returns>
            <exception cref="T:GpsGate.Sierra.RapFormatException"></exception>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapPowerSleep">
            <summary>
            PowerSleep Report 0x30
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerSleep.#ctor(System.Byte[])">
            <summary>
            Create report
            </summary>
            <param name="arrData"></param>
            <exception cref="T:GpsGate.Sierra.RapFormatException"></exception>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerSleep.IsPowerSleep(System.Byte[])">
            <summary>
            Returns true if byte array is a probable power sleep report.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerSleep.ParseReport(System.Byte[],System.Int32)">
            <summary>
            Parse byte array.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <exception cref="T:GpsGate.Sierra.RapFormatException">Could not parse report</exception>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapPowerUp">
            <summary>
            PowerUp Report 0x10
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerUp.#ctor(System.Byte[])">
            <summary>
            Create report object.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerUp.IsPowerUp(System.Byte[])">
            <summary>
            Returns true if byte array is a probable power wakeup report.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerUp.ParseReport(System.Byte[],System.Int32)">
            <summary>
            Parse byte array.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <exception cref="T:GpsGate.Sierra.RapFormatException">Could not parse report</exception>
        </member>
        <member name="T:GpsGate.Sierra.PinPoint.RapPowerWakeup">
            <summary>
            PowerSleep Report 0x31
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerWakeup.#ctor(System.Byte[])">
            <summary>
            Create report from parsed byte array.
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerWakeup.IsPowerWakeup(System.Byte[])">
            <summary>
            Returns true if byte array is a probable power wakeup report.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.Sierra.PinPoint.RapPowerWakeup.ParseReport(System.Byte[],System.Int32)">
            <summary>
            Parse byte array.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <exception cref="T:GpsGate.Sierra.RapFormatException">Could not parse report</exception>
        </member>
    </members>
</doc>
