<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.WebTech</name>
    </assembly>
    <members>
        <member name="T:GpsGate.WebTech.WebTechBase">
            <summary>
            All WebTech sentences inherit from this class
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechBase.#ctor(GpsGate.WebTech.WebTechSentence)">
            <summary>
            Create typed WebTech sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="T:GpsGate.WebTech.WebTechBuilder">
            <summary>
            Build WebTech sentence
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:GpsGate.WebTech.WebTechDeviceDefinition">
            <summary>
            All WebTech device definitions inhertits from this class.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:GpsGate.WebTech.WebTechDeviceDefinition.NamespaceName">
            <summary>
            Returns "WebTech"
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechGprsSettingsCmdExe">
            <summary>
            Handles outgoing _GprsSettings command for WebTech
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechGprsSettingsCmdExe.Execute">
            <summary>
            Throws exception
            </summary>
            <exception cref="T:GpsGate.Online.GateCmdException"></exception>
        </member>
        <member name="P:GpsGate.WebTech.WebTechGprsSettingsCmdExe.RequiresAck">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechGprsSettingsCmdExe.Namespace">
            <summary>
            Returns "WebTech"
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechLogin">
            <summary>
            Login sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechLogin.#ctor(GpsGate.WebTech.WebTechSentence)">
            <summary>
            Create login sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechLogin.IsLogin(GpsGate.WebTech.WebTechSentence)">
            <summary>
            Returns true if generic sentence is a login sentence
            </summary>
            <param name="wtSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechLogin.BuildSentence">
            <summary>
            Throws exception
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.WebTech.WebTechLogin.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parse WebTech sentence
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="P:GpsGate.WebTech.WebTechLogin.IMEI">
            <summary>
            Returns IMEI from login sentence.
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechParser">
            <summary>
            Parses WebTech "t" protocol.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechParser.ParserWebTechCoordinate(System.String)">
            <summary>
            Parses a field fo format. ~OOOMMSSss or ~AAMMSSss
            </summary>
            <param name="strField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechParser.ParseWebTechDateTime(System.String)">
            <summary>
            yyyymmddHHMMSS
            </summary>
            <param name="strField"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechParser.#ctor">
            <summary>
            Create parser
            </summary>
        </member>
        <member name="M:GpsGate.WebTech.WebTechParser.CreateSentence(System.Byte[])">
            <summary>
            Returns a new <see cref="T:GpsGate.WebTech.WebTechSentence"/> object.
            </summary>
            <param name="arrSentence"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechParser.ValidateSentence(System.Byte[])">
            <summary>
            Always returns true.
            </summary>
            <param name="arrData"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.WebTech.WebTechParser.IgnoreRepeatedStartPrefix">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechParser.NoStartPrefix">
            <summary>
            Returns true, since WebTech "t" sentencs doesn't have a start prefix.
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechProtocol">
            <summary>
            Base class for all WebTech protocols.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechProtocol.#ctor(GpsGate.Online.Net.NmeaConnection)">
            <summary>
            Create protocol object.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechProtocol.TranslateFromDevice(System.Byte[],System.Int32,System.Int32)">
            <summary>
            GPRS traffic. UDP and TCP.
            </summary>
            <param name="arrData"></param>
            <param name="iStart"></param>
            <param name="iLength"></param>
        </member>
        <member name="P:GpsGate.WebTech.WebTechProtocol.IsBigT">
            <summary>
            Returns true if protocol is big T
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechProtocol.IsSmallT">
            <summary>
            Returns true if protocol is small "t"
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechProtocol.StringID">
            <summary>
            Returns "WebTech"
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechReport">
            <summary>
            Location report
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechReport.#ctor(GpsGate.WebTech.WebTechSentence)">
            <summary>
            Create location report from generic sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechReport.SetStatus(System.String,System.Object)">
            <summary>
            Called by parser to add new status value.
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechReport.BuildSentence">
            <summary>
            Thorws exception
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GpsGate.WebTech.WebTechReport.ParseSentence(Franson.Nmea.Sentence)">
            <summary>
            Parse generic WebTech sentence.
            </summary>
            <param name="sentence"></param>
        </member>
        <member name="P:GpsGate.WebTech.WebTechReport.TrackPoint">
            <summary>
            Returns TrackPoint for this location report.
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechReport.Status">
            <summary>
            Returns status values.
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WebTechReport.IMEI">
            <summary>
            IMEI. Can be null if report doesn't contain IMEI information.
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechSentence">
            <summary>
            WebTech generic sentence
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="T:GpsGate.WebTech.WebTechSmsConnection">
            <summary>
            Handles incoming and outgoing SMS to WebTech trackers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechSmsConnection.#ctor(Franson.Message.MSISDN)">
            <summary>
            Create incoming SMS connection for WebTech.
            </summary>
            <param name="numPhone"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechSmsConnection.CreateProtocol">
            <summary>
            Returns <see cref="T:GpsGate.WebTech.WebTechProtocol"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.WebTech.WebTechSmsListener">
            <summary>
            WebTech SMS listener.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechSmsListener.CreateSmsConnection(Franson.Message.MSISDN)">
            <summary>
            Returns a <see cref="T:GpsGate.WebTech.WebTechSmsConnection"/> object for incoming data.
            </summary>
            <param name="msisdn"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechSmsListener.OnStart">
            <summary>
            Installs WebTech protocol and start s up listener.
            </summary>
        </member>
        <member name="M:GpsGate.WebTech.WebTechSmsListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Adds default settings for WebTech.
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.WebTech.WebTechSmsListener.ProtocolID">
            <summary>
            Returns "WebTech"
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechTcpConnection">
            <summary>
            WebTech Tcp protocol translator
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            WebTech Tcp connection
            </summary>
            <param name="socket"></param>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpConnection.CreateProtocol">
            <summary>
            Returns a <see cref="T:GpsGate.WebTech.WebTechProtocol"/> object. Which is used to convert beween WebTech and GpsGate
            protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpConnection.DoProtocolToDevice(System.Byte[])">
            <summary>
            Checks if this is a command to a WebTech device which does not have an ending '\n'
            </summary>
            <param name="arrData"></param>
        </member>
        <member name="T:GpsGate.WebTech.WebTechTcpListener">
            <summary>
            Handles Tcp datagrams from WebTech devices.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpListener.OnStart">
            <summary>
            Called when listener started.
            </summary>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpListener.CreateTcpConnection(System.Net.Sockets.Socket)">
            <summary>
            Create new <see cref="T:GpsGate.WebTech.WebTechTcpConnection"/> object for a WebTech device.
            </summary>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTcpListener.Install(Franson.Reflection.LoadableType)">
            <summary>
            Called when listener type is installed.
            Sets default server port to 10303
            </summary>
            <param name="typeInfo"></param>
        </member>
        <member name="P:GpsGate.WebTech.WebTechTcpListener.ProtocolID">
            <summary>
            Returns "WebTech"
            </summary>
        </member>
        <member name="T:GpsGate.WebTech.WebTechTParser">
            <summary>
            Parses WebTech "T" protocol. That is TCP with ACK.
            </summary>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTParser.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write data to T parser.
            </summary>
            <param name="arrData"></param>
            <param name="iStartIndex"></param>
            <param name="iLength"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTParser.NextSentence">
            <summary>
            Parse next T WebTech sentence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WebTechTParser.ToString">
            <summary>
            For logging
            </summary>
            <returns></returns>
        </member>
        <member name="T:GpsGate.WebTech.WT5000DeviceDefinition">
            <summary>
            WebTech WT5000 device definition.
            </summary>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="M:GpsGate.WebTech.WT5000DeviceDefinition.InstallMessageFields(Franson.Message.MessageNamespace,System.Collections.Generic.List{GpsGate.Online.Directory.DeviceFieldProperty})">
            <summary>
            Add WebTech WT5000 message fields.
            </summary>
            <param name="deviceNamespace"></param>
            <param name="listFields"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WT5000DeviceDefinition.InstallDefaultMapperEntryFor(Franson.Message.MessageField,Franson.Message.MessageFieldDictionary)">
            <summary>
            Add default mapping to GpsGate fields.
            </summary>
            <param name="inField"></param>
            <param name="defaultMapper"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.WebTech.WT5000DeviceDefinition.RegisterCommad(GpsGate.Online.Command.GateCmd)">
            <summary>
            Enables _StartTracking, _StopTracking and _PollPosition.
            </summary>
            <param name="gateCommand"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.WebTech.WT5000DeviceDefinition.Name">
            <summary>
            Name of the Device Model
            </summary>
        </member>
        <member name="P:GpsGate.WebTech.WT5000DeviceDefinition.Description">
            <summary>
            Device model description
            </summary>
        </member>
    </members>
</doc>
