<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GpsGate.VehicleTracker</name>
    </assembly>
    <members>
        <member name="T:GpsGate.VehicleTracker.VehicleTrackerApplication">
            <summary>
            Represents one VehicleTracker application instance.
            Can add and remove resources, like users, from a VehicleTracker application.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.#ctor">
            <summary>
            Create object.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.LoadByID(System.Int32)">
            <summary>
            Load application data from database.
            </summary>
            <param name="iID">Database ID</param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.RemoveUserFromApplication(Franson.Directory.User,Franson.Directory.User)">
             <summary>
             Removes administrator, user or vehicle from application.
             
             </summary>
             <remarks>
            	If the user not is member in any other <see cref="T:Franson.Directory.Application"/> than this one, the user will be removed completely. (erased from database)
             </remarks>
             <example>
             <code lang="C#">
             private void RemoveUser(string strUsername, string strAdminUsername, int iAppID)
             {
                 // Remove user VT application
                 //
            
                 VehicleTrackerApplication app = new VehicleTrackerApplication();
                 // Use one transaction for all changes.
                 Transaction trans = gVehicle.BeginTransaction();
                 try
                 {
                     // DB: applications.application_id
                     app.LoadByID(iAppID);
            
                     // Some admin
                     GateUser gAdmin = new GateUser();
                     gAdmin.LoadByUsername(strAdminUsername);
            
                     // Load vehicle to remove!
                     GateUser gVehicle = new GateUser();
                     gVehicle.LoadByUsername(strUsername);
            
                     app.RemoveUserFromApplication(gVehicle, gAdmin);
                     // Save changes to DB.
                     app.Update();
            
            
                     // Commit changes.
                     trans.Commit();
                 }
                 catch (Exception)
                 {
                     trans.Rollback();
                 }
             }
             </code>
             </example>
             <param name="user"></param>
             <param name="userRemoving"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.CreateNewApplication">
            <summary>
            This method is called by <see cref="M:Franson.Directory.Application.Update"/> when a new application instance is stored in
            database.
            Setup this application.
            Adds the necessary groups (Admin group, vehicle group and operator group)
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.SetupDefaultApplicationEntities(System.Version,System.Version,GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition)">
            <summary>
            Setup default event rules, mappers etc for VehicleTracker using a provided applicationdefinition
            </summary>
            <param name="newVersion"></param>
            <param name="oldVersion"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.SetupDefaultApplicationEntities(System.Version,System.Version)">
            <summary>
            Setup default event rules, mappers etc for VehicleTracker
            </summary>
            <param name="newVersion"></param>
            <param name="oldVersion"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.AddOperator(GpsGate.Online.GateUser)">
            <summary>
            Adds an operator to this application.
            Update is called after the operator has been added. 
            </summary>
            <param name="opUser">The user to add as operator</param>
            <exception cref="!:MaxAllowedUsersException">No license to add one more user.</exception>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.AddAdministrator(Franson.Directory.User)">
            <summary>
            Add a user with administrator rights to application.
            </summary>
            <param name="administrator"></param>
            <exception cref="!:MaxAllowedUsersException">No license to add more users</exception>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.AddVehicle(GpsGate.Online.GateUser)">
             <summary>
             Adds a new vehicle to this application
             Update is called after the vehicle has been added. 
             </summary>
             <example>
             <code lang="C#">
             using GpsGate.VehicleTracker;
             using GpsGate.Online.Directory;
             using GpsGate.Online;
             using Franson.DAO;
            
             private void AddVehicle(string strUsername, string strPassword, int iAppID)
             {
                 // Add a vehicle to VT application for GpsGate Server 2.0
                 // This is sample code only! which demonstrates how to add a new vehcile to an existing VT applicaiton.
                 // This can be useful when you integrate some custom system to GpsGate Server.
                 // NOTE! This is demo code only, and is not complete in any way!
            
                 VehicleTrackerApplication app = new VehicleTrackerApplication();
                 // DB: applications.application_id
                 app.LoadByID(iAppID);
            
                 // This is the new vehicle!
                 GateUser gVehicle = new GateUser();
                 gVehicle.Username = strUsername;
                 gVehicle.Password = strPassword;
                 gVehicle.Name = "Some name";
                 gVehicle.IsActivated = true;
            
                 // Use one transaction for all changes.
                 Transaction trans = gVehicle.BeginTransaction();
                 
                 try
                 {
                     // save new vehcile to DB
                     gVehicle.Update();
            
                     app.AddVehicle(gVehicle);
                     // Save changes to DB.
                     app.Update();
            
                     // THE DATABASE ID
                     int iVehicleID = gVehicle.ID;
             
                     // Commit changes.
                     trans.Commit();
                 }
                 catch(Exception)
                 {
                     trans.Rollback();
                 }
             
             }
             </code>
             </example>
             <param name="vehicleUser">The GateUser to add as the vehicle</param>
             <exception cref="!:MaxAllowedUsersException">No license to add more users</exception>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.AddMapLibToApplication(Franson.Map.MapLib)">
            <summary>
            Add a custom map to this application.
            </summary>
            <param name="mapLib"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.RemoveMapLibFromApplication(Franson.Map.MapLib)">
            <summary>
            Remove custom map from this application.
            </summary>
            <param name="mapLib"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplication.Resolve(Franson.Text.TemplateParser,System.String)">
            <summary>
            Resolves an ITemplateResolver variable.
            </summary>
            <param name="p"></param>
            <param name="strVariable"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplication.OperatorGroup">
            <summary>
            Returns the group where all operators are members.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplication.VehicleGroup">
            <summary>
            Returns group where all vehicles are members.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplication.FieldDictionaries">
            <summary>
            Get all device mappers for this Application.
            
            Internally goes through all supported device types and create a new default mapper out of the mapper template if not already exist.
            
            TODO: Installation of default mappers should be done during install/upgrade, move to SetupDefaultApplicationEntities.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplication.SupportedVariables">
            <summary>
            Returns supported variables.
            - MOBILE_APPLICATION_URL
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition">
            <summary>
            Appliation definition for VehicleTracker.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.AppliesTo(System.Type)">
            <summary>
            Returns true if argument is a typeof(VehicleTrackerApplication) object.
            </summary>
            <param name="applicationType"></param>
            <returns></returns>
        </member>
        <member name="M:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.AppliesTo(System.String)">
            <summary>
            Returns true if the argument equals typeof(VehicleTrackerApplication).FullName
            </summary>
            <param name="strTypeName"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.Name">
            <summary>
            Returns "VehicleTracker"
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.Description">
            <summary>
            Free text description.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.InstallChannels">
            <summary>
            Installs SOS and ALARM channels and returns an enum.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.VehicleTrackerApplicationDefinition.Dependencies">
            <summary>
            Returns list of plugins that needs to be installed first.
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter">
            <summary>
            Common base class for presenters in VehicleTracker mobile application.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.#ctor(GpsGate.VehicleTracker.Presentation.Mobile.IBaseView)">
            <summary>
            Creates a new presenter.
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.view_OnRequestContext(System.Object,System.EventArgs)">
            <summary>
            Return the context on request.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns>return the context for the current logged in user. Null if un authenticated.</returns>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.GetSession">
            <summary>
            Creates the session.
            Check if view can provide SessionID then use that.
            else
            Check if view can provide TemporaryCredential hash, then use that.
            else
            return null
            </summary>
            <returns></returns>
            <exception cref="T:Franson.Directory.AuthenticationException"/>
            <exception cref="T:Franson.Directory.SessionExpiredException"/>
            <exception cref="!:SessionNotFoundException"/>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.m_CreateContext(Franson.Directory.Session)">
            <summary>
            Creates ApplicationContext from session.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.Context">
            <summary>
            Application Context object for the current logged in user.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.BasePresenter.RequireAuthentication">
            <summary>
            Return tru if page require authentication.
            Note! If returning false. The Contex will be null.
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.RequestContextHandler">
            <summary>
            Event signature for Context events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.IDEventHandler">
            <summary>
            Event signature for events passing BOItem.ID
            </summary>
            <param name="sender"></param>
            <param name="iID"></param>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView">
            <summary>
            Base view interface.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.DisplayError(System.String)">
            <summary>
            Displays an unhandled error.
            </summary>
            <param name="strError"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.ChangeView(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Change view.
            </summary>
            <param name="strName"></param>
            <param name="param"></param>
        </member>
        <member name="E:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.OnRequestContext">
            <summary>
            Signaled when View request the current application context.
            </summary>
        </member>
        <member name="E:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.OnInitView">
            <summary>
            Signal when view ready.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.AuthenticationHash">
            <summary>
            Get an authentication hash used for temporary login.
            This is the AES encrypted ID of the <see cref="!:TemporaryCredentials"/> object.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.SessionID">
            <summary>
            Get the ID of the current session.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.ApplicationID">
            <summary>
            Get the ID os the current application.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.SessionIdentifier">
            <summary>
            Idnetifier used when login. Usaly the IP address of the loged in user.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.Name">
            <summary>
            Friendly name of the view.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IBaseView.LocalizationResourcePath">
            <summary>
            Get the path to localization folder.
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView">
            <summary>
            Interface for login view.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.ListApplications(System.Collections.Generic.IEnumerable{Franson.Directory.Application})">
            <summary>
            List applications if user is member of more than one.
            </summary>
            <param name="applications"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.PostLoginView(System.String,System.Int32,System.Int32)">
            <summary>
            After login. Set view.
            </summary>
            <param name="strView"></param>
            <param name="iApplicationID"></param>
            <param name="iSessionID"></param>
        </member>
        <member name="E:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.OnLogin">
            <summary>
            View performe the login.
            </summary>
        </member>
        <member name="E:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.OnApplicationSelected">
            <summary>
            View selects an application.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.Username">
            <summary>
            Get the username.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.Password">
            <summary>
            Get the password.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.ILoginView.SelectedApplication">
            <summary>
            Get the selected application ID
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.IMapView">
            <summary>
            Defines a view displaying information on a map
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.AddAlarmMarker(GpsGate.Online.Event.GateEvent,Franson.Web.Map.IStaticMapBuilder)">
            <summary>
            Adds a alarm marker to the map.
            </summary>
            <param name="alarm"></param>
            <param name="mb"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.AddUserMarker(GpsGate.Online.Directory.GateUserBag,Franson.Web.Map.IStaticMapBuilder)">
            <summary>
            Adds a user marker to the map.
            </summary>
            <param name="user"></param>
            <param name="mb"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.RenderMap(Franson.Web.Map.IStaticMapBuilder)">
            <summary>
            Render map.
            </summary>
            <param name="mb"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.DisplayUserIndfo(GpsGate.Online.Directory.GateUserBag)">
            <summary>
            Displays user info
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.DisplayAlarmInfo(GpsGate.Online.Event.GateEvent)">
            <summary>
            Display information about the given alarm.
            </summary>
            <param name="alarms"></param>
        </member>
        <member name="E:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.OnCloseAlarm">
            <summary>
            Fired when view close alarm.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.EventID">
            <summary>
            ID of the <see cref="T:GpsGate.Online.Event.GateEvent"/> Alarm.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IMapView.UserID">
            <summary>
            ID os the <see cref="!:User"/> to display
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.ISummaryView">
            <summary>
            Defines a view displaying summarized information for a vehiceltracker application.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.ISummaryView.ListViews(System.Collections.Generic.IEnumerable{GpsGate.VehicleTracker.Presentation.Mobile.SummaryView})">
            <summary>
            List <see cref="T:GpsGate.Online.Directory.View">Views</see> in vehicle tracker.
            </summary>
            <param name="views"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.ISummaryView.ListAlarms(System.Collections.Generic.IEnumerable{GpsGate.Online.Event.GateEvent})">
            <summary>
            List open <see cref="T:GpsGate.Online.Event.GateEvent">Alarms</see> in the vehicle tracker applications.
            </summary>
            <param name="events"></param>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.IUsersView">
            <summary>
            Defining a view that displays users in a view.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.IUsersView.ListUsersInView(System.Collections.Generic.IEnumerable{GpsGate.Online.Directory.GateUserBag})">
            <summary>
            List users.
            </summary>
            <param name="users"></param>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.IUsersView.ViewID">
            <summary>
            Get the ID of the <see cref="T:GpsGate.Online.Directory.View"/>.
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter">
            <summary>
            Login presenter. Manage logic for Login view.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter.#ctor(GpsGate.VehicleTracker.Presentation.Mobile.IBaseView)">
            <summary>
            Creates a new LoginPresenter.
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter.view_OnApplicationSelected(System.Object,System.EventArgs)">
            <summary>
            Application selected.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter.view_OnLogin(System.Object,System.EventArgs)">
            <summary>
            Login clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter.DoLogin(System.Int32,System.String,System.String)">
            <summary>
            Do the login.
            On success. Change view to summary.
            </summary>
            <param name="iApplicationID">ID of application to log in to.</param>
            <param name="strUsername">Username</param>
            <param name="strPassword">Password</param>
            <exception cref="T:Franson.Directory.AuthenticationException"/>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.LoginPresenter.RequireAuthentication">
            <summary>
            Do not require authentication.
            </summary>
        </member>
        <member name="T:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter">
            <summary>
            Presenter for vehicle tracker compact map.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.#ctor(GpsGate.VehicleTracker.Presentation.Mobile.IMapView)">
            <summary>
            Create a new Map presenter object.
            </summary>
            <param name="view">IView.</param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.view_OnInitView(System.Object,System.EventArgs)">
            <summary>
            View initiated.
            </summary>
            <param name="sender">View</param>
            <param name="e">empty</param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.view_OnCloseAlarm(System.Object,System.Int32)">
            <summary>
            View close alarm.
            </summary>
            <param name="sender"></param>
            <param name="iID"></param>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.RenderMap">
            <summary>
            Renders the map.
            </summary>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.GetUser(System.Int32)">
            <summary>
            Get <see cref="T:GpsGate.Online.Directory.GateUserBag"/> identified by ID.
            </summary>
            <param name="iUserID">Database ID of the user.</param>
            <returns>Null = Not found.</returns>
        </member>
        <member name="M:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.GetEvent(System.Int64)">
            <summary>
            Get a <see cref="T:GpsGate.Online.Event.GateEvent"/> identified by ID
            </summary>
            <param name="iEventID">Database ID of the event</param>
            <returns>Null = No found.</returns>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.RequireAuthentication">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="P:GpsGate.VehicleTracker.Presentation.Mobile.MapPresenter.GoogleKey">
            <summary>
            Get google map key.
            </summary>
        </member>
    </members>
</doc>
