<?xml version="1.0"?>
<configuration>
    <configSections>
        <sectionGroup name="common">
            <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
        </sectionGroup>
        <sectionGroup name="spring">
            <section name="context" type="Spring.Context.Support.WebContextHandler, Spring.Web"/>
            <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
            <!--<section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />-->
        </sectionGroup>
        <section name="databaseSettings" type="System.Configuration.NameValueSectionHandler"/>
    </configSections>
    <common>
        <logging>
            <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
                <!-- choices are INLINE, FILE, FILE-WATCH, EXTERNAL-->
                <arg key="configType" value="FILE-WATCH"/>
                <arg key="configFile" value="~/Config/Log4Net.xml"/>
            </factoryAdapter>
        </logging>
    </common>
    <spring>
        <parsers>
            <parser type="Spring.Data.Config.DatabaseNamespaceParser, Spring.Data"/>
            <parser type="Spring.Transaction.Config.TxNamespaceParser, Spring.Data"/>
        </parsers>
        <context>
            <resource uri="assembly://Loyalty.Web.WebService/Loyalty.Web.WebService.Config/Controllers.xml"/>
            <resource uri="assembly://Loyalty.Web.WebService/Loyalty.Web.WebService.Config/Common.xml"/>
            <resource uri="assembly://Loyalty.Dao.NHibernate/Loyalty.Dao.NHibernate.Dao/Dao.xml"/>
        </context>
        <!--<objects>
            <object id="timingInterceptor" type="Loyalty.Web.WebService.Interceptor.TimingInterceptor, Loyalty.Web.WebService, Version=1.0.0.0, Culture=neutral">
                <property name="MediumExecutionTimeLowerBounds" value="500"/>
            </object>
            <object id="LoyaltyCardService" type="Spring.Aop.Framework.ProxyFactoryObject, Spring.Aop">
                <property name="target">
                    <object type="Loyalty.Web.Service.LoyaltyCardService, Loyalty.Web.Service, Version=1.0.0.0, Culture=neutral"/>
                </property>
                <property name="interceptorNames">
                    <list>
                        <value>timingInterceptor</value>
                    </list>
                </property>
            </object>
        </objects>-->
    </spring>

  <!--
  
      78.109.170.133
      Administrator Username: graphite.rack
      Administrator Password: bCGbpXWE

  -->

    <!-- These properties are referenced in Dao.xml -->
    <databaseSettings>
        <!--<add key="db.datasource" value="CLOUDTOWER\CLOUD"/>
        <add key="db.datasource" value="DFJ89C4J\DUANESQL2005"/>-->
        <add key="db.datasource" value="TESTSERVER2003\DEVSQL2005"/>
         <!--<add key="db.datasource" value="144616-RACK2\SQLEXPRESS"/>-->
        <add key="db.user" value="LoyaltyCardPublicUser"/>
        <add key="db.password" value="PublicPass"/>
        <!-- <add key="db.database" value="Loyalty"/> -->
      <add key="db.database" value="Loyalty_Test"/>
    </databaseSettings>

    <appSettings>
        <add key="Spring.Data.NHibernate.Support.OpenSessionInViewModule.SessionFactoryObjectName" value="NHibernateSessionFactory"/>
    </appSettings>

    <connectionStrings/>
    <system.web>
        <webServices>
            <protocols>
                <add name="HttpSoap12"/>
                <add name="HttpSoap"/>
                <add name="HttpGet"/>
                <add name="HttpPost"/>
            </protocols>
        </webServices>
        <httpHandlers>
            <add verb="*" path="*.asmx" type="Spring.Web.Services.WebServiceHandlerFactory, Spring.Web"/>
        </httpHandlers>
        <httpModules>
            <add name="Spring" type="Spring.Context.Support.WebSupportModule, Spring.Web"/>
            <add name="OpenSessionInView" type="Spring.Data.NHibernate.Support.OpenSessionInViewModule, Spring.Data.NHibernate12"/>
        </httpModules>
        <!-- todo: set to false when live-->
        <compilation debug="true"/>
    </system.web>

</configuration>
